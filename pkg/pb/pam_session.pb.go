// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: pam_session.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	TokenHash     string                 `protobuf:"bytes,3,opt,name=token_hash,json=tokenHash,proto3" json:"token_hash,omitempty"`
	LocalSocket   string                 `protobuf:"bytes,4,opt,name=local_socket,json=localSocket,proto3" json:"local_socket,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Pid           uint32                 `protobuf:"varint,6,opt,name=pid,proto3" json:"pid,omitempty"`
	Ppid          uint32                 `protobuf:"varint,7,opt,name=ppid,proto3" json:"ppid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterSessionRequest) Reset() {
	*x = RegisterSessionRequest{}
	mi := &file_pam_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSessionRequest) ProtoMessage() {}

func (x *RegisterSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pam_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSessionRequest.ProtoReflect.Descriptor instead.
func (*RegisterSessionRequest) Descriptor() ([]byte, []int) {
	return file_pam_session_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegisterSessionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterSessionRequest) GetTokenHash() string {
	if x != nil {
		return x.TokenHash
	}
	return ""
}

func (x *RegisterSessionRequest) GetLocalSocket() string {
	if x != nil {
		return x.LocalSocket
	}
	return ""
}

func (x *RegisterSessionRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *RegisterSessionRequest) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RegisterSessionRequest) GetPpid() uint32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

type RegisterSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterSessionResponse) Reset() {
	*x = RegisterSessionResponse{}
	mi := &file_pam_session_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSessionResponse) ProtoMessage() {}

func (x *RegisterSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pam_session_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSessionResponse.ProtoReflect.Descriptor instead.
func (*RegisterSessionResponse) Descriptor() ([]byte, []int) {
	return file_pam_session_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegisterSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SessionStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionStatusRequest) Reset() {
	*x = SessionStatusRequest{}
	mi := &file_pam_session_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStatusRequest) ProtoMessage() {}

func (x *SessionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pam_session_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStatusRequest.ProtoReflect.Descriptor instead.
func (*SessionStatusRequest) Descriptor() ([]byte, []int) {
	return file_pam_session_proto_rawDescGZIP(), []int{2}
}

func (x *SessionStatusRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SessionStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Expiry        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionStatusResponse) Reset() {
	*x = SessionStatusResponse{}
	mi := &file_pam_session_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStatusResponse) ProtoMessage() {}

func (x *SessionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pam_session_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStatusResponse.ProtoReflect.Descriptor instead.
func (*SessionStatusResponse) Descriptor() ([]byte, []int) {
	return file_pam_session_proto_rawDescGZIP(), []int{3}
}

func (x *SessionStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SessionStatusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SessionStatusResponse) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type CloseSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Pid           uint32                 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseSessionRequest) Reset() {
	*x = CloseSessionRequest{}
	mi := &file_pam_session_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionRequest) ProtoMessage() {}

func (x *CloseSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pam_session_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionRequest.ProtoReflect.Descriptor instead.
func (*CloseSessionRequest) Descriptor() ([]byte, []int) {
	return file_pam_session_proto_rawDescGZIP(), []int{4}
}

func (x *CloseSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CloseSessionRequest) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type CloseSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseSessionResponse) Reset() {
	*x = CloseSessionResponse{}
	mi := &file_pam_session_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResponse) ProtoMessage() {}

func (x *CloseSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pam_session_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResponse.ProtoReflect.Descriptor instead.
func (*CloseSessionResponse) Descriptor() ([]byte, []int) {
	return file_pam_session_proto_rawDescGZIP(), []int{5}
}

func (x *CloseSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_pam_session_proto protoreflect.FileDescriptor

const file_pam_session_proto_rawDesc = "" +
	"\n" +
	"\x11pam_session.proto\x12\vpam_session\x1a\x1fgoogle/protobuf/timestamp.proto\"\xda\x01\n" +
	"\x16RegisterSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"token_hash\x18\x03 \x01(\tR\ttokenHash\x12!\n" +
	"\flocal_socket\x18\x04 \x01(\tR\vlocalSocket\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\x12\x10\n" +
	"\x03pid\x18\x06 \x01(\rR\x03pid\x12\x12\n" +
	"\x04ppid\x18\a \x01(\rR\x04ppid\"h\n" +
	"\x17RegisterSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"5\n" +
	"\x14SessionStatusRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"{\n" +
	"\x15SessionStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x122\n" +
	"\x06expiry\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06expiry\"F\n" +
	"\x13CloseSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\"0\n" +
	"\x14CloseSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x9b\x02\n" +
	"\x0eSessionManager\x12\\\n" +
	"\x0fRegisterSession\x12#.pam_session.RegisterSessionRequest\x1a$.pam_session.RegisterSessionResponse\x12V\n" +
	"\rSessionStatus\x12!.pam_session.SessionStatusRequest\x1a\".pam_session.SessionStatusResponse\x12S\n" +
	"\fCloseSession\x12 .pam_session.CloseSessionRequest\x1a!.pam_session.CloseSessionResponseB\vZ\x06pkg/pb\xba\x02\x00b\x06proto3"

var (
	file_pam_session_proto_rawDescOnce sync.Once
	file_pam_session_proto_rawDescData []byte
)

func file_pam_session_proto_rawDescGZIP() []byte {
	file_pam_session_proto_rawDescOnce.Do(func() {
		file_pam_session_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pam_session_proto_rawDesc), len(file_pam_session_proto_rawDesc)))
	})
	return file_pam_session_proto_rawDescData
}

var file_pam_session_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pam_session_proto_goTypes = []any{
	(*RegisterSessionRequest)(nil),  // 0: pam_session.RegisterSessionRequest
	(*RegisterSessionResponse)(nil), // 1: pam_session.RegisterSessionResponse
	(*SessionStatusRequest)(nil),    // 2: pam_session.SessionStatusRequest
	(*SessionStatusResponse)(nil),   // 3: pam_session.SessionStatusResponse
	(*CloseSessionRequest)(nil),     // 4: pam_session.CloseSessionRequest
	(*CloseSessionResponse)(nil),    // 5: pam_session.CloseSessionResponse
	(*timestamppb.Timestamp)(nil),   // 6: google.protobuf.Timestamp
}
var file_pam_session_proto_depIdxs = []int32{
	6, // 0: pam_session.SessionStatusResponse.expiry:type_name -> google.protobuf.Timestamp
	0, // 1: pam_session.SessionManager.RegisterSession:input_type -> pam_session.RegisterSessionRequest
	2, // 2: pam_session.SessionManager.SessionStatus:input_type -> pam_session.SessionStatusRequest
	4, // 3: pam_session.SessionManager.CloseSession:input_type -> pam_session.CloseSessionRequest
	1, // 4: pam_session.SessionManager.RegisterSession:output_type -> pam_session.RegisterSessionResponse
	3, // 5: pam_session.SessionManager.SessionStatus:output_type -> pam_session.SessionStatusResponse
	5, // 6: pam_session.SessionManager.CloseSession:output_type -> pam_session.CloseSessionResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pam_session_proto_init() }
func file_pam_session_proto_init() {
	if File_pam_session_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pam_session_proto_rawDesc), len(file_pam_session_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pam_session_proto_goTypes,
		DependencyIndexes: file_pam_session_proto_depIdxs,
		MessageInfos:      file_pam_session_proto_msgTypes,
	}.Build()
	File_pam_session_proto = out.File
	file_pam_session_proto_goTypes = nil
	file_pam_session_proto_depIdxs = nil
}
