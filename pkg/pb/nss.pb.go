// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: nss.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_nss_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nss_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_nss_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GetRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type Users struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Users) Reset() {
	*x = Users{}
	mi := &file_nss_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_nss_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_nss_proto_rawDescGZIP(), []int{1}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uid           uint32                 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid           uint32                 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	Gecos         string                 `protobuf:"bytes,4,opt,name=gecos,proto3" json:"gecos,omitempty"`
	Homedir       string                 `protobuf:"bytes,5,opt,name=homedir,proto3" json:"homedir,omitempty"`
	Shell         string                 `protobuf:"bytes,6,opt,name=shell,proto3" json:"shell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_nss_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_nss_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_nss_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *User) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *User) GetGecos() string {
	if x != nil {
		return x.Gecos
	}
	return ""
}

func (x *User) GetHomedir() string {
	if x != nil {
		return x.Homedir
	}
	return ""
}

func (x *User) GetShell() string {
	if x != nil {
		return x.Shell
	}
	return ""
}

type Groups struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*Group               `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Groups) Reset() {
	*x = Groups{}
	mi := &file_nss_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_nss_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_nss_proto_rawDescGZIP(), []int{3}
}

func (x *Groups) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gid           uint32                 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Members       []string               `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	Passwd        string                 `protobuf:"bytes,4,opt,name=passwd,proto3" json:"passwd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_nss_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_nss_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_nss_proto_rawDescGZIP(), []int{4}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *Group) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Group) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

var File_nss_proto protoreflect.FileDescriptor

const file_nss_proto_rawDesc = "" +
	"\n" +
	"\tnss.proto\x12\x03nss\x1a\x1bgoogle/protobuf/empty.proto\"J\n" +
	"\n" +
	"GetRequest\x12\x13\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x01R\x04name\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_name\"(\n" +
	"\x05Users\x12\x1f\n" +
	"\x05users\x18\x01 \x03(\v2\t.nss.UserR\x05users\"\x84\x01\n" +
	"\x04User\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\rR\x03uid\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\rR\x03gid\x12\x14\n" +
	"\x05gecos\x18\x04 \x01(\tR\x05gecos\x12\x18\n" +
	"\ahomedir\x18\x05 \x01(\tR\ahomedir\x12\x14\n" +
	"\x05shell\x18\x06 \x01(\tR\x05shell\",\n" +
	"\x06Groups\x12\"\n" +
	"\x06groups\x18\x01 \x03(\v2\n" +
	".nss.GroupR\x06groups\"_\n" +
	"\x05Group\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03gid\x18\x02 \x01(\rR\x03gid\x12\x18\n" +
	"\amembers\x18\x03 \x03(\tR\amembers\x12\x16\n" +
	"\x06passwd\x18\x04 \x01(\tR\x06passwd2\xb9\x01\n" +
	"\x03NSS\x12/\n" +
	"\tListUsers\x12\x16.google.protobuf.Empty\x1a\n" +
	".nss.Users\x12%\n" +
	"\aGetUser\x12\x0f.nss.GetRequest\x1a\t.nss.User\x121\n" +
	"\n" +
	"ListGroups\x12\x16.google.protobuf.Empty\x1a\v.nss.Groups\x12'\n" +
	"\bGetGroup\x12\x0f.nss.GetRequest\x1a\n" +
	".nss.GroupB\vZ\x06pkg/pb\xba\x02\x00b\x06proto3"

var (
	file_nss_proto_rawDescOnce sync.Once
	file_nss_proto_rawDescData []byte
)

func file_nss_proto_rawDescGZIP() []byte {
	file_nss_proto_rawDescOnce.Do(func() {
		file_nss_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nss_proto_rawDesc), len(file_nss_proto_rawDesc)))
	})
	return file_nss_proto_rawDescData
}

var file_nss_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_nss_proto_goTypes = []any{
	(*GetRequest)(nil),    // 0: nss.GetRequest
	(*Users)(nil),         // 1: nss.Users
	(*User)(nil),          // 2: nss.User
	(*Groups)(nil),        // 3: nss.Groups
	(*Group)(nil),         // 4: nss.Group
	(*emptypb.Empty)(nil), // 5: google.protobuf.Empty
}
var file_nss_proto_depIdxs = []int32{
	2, // 0: nss.Users.users:type_name -> nss.User
	4, // 1: nss.Groups.groups:type_name -> nss.Group
	5, // 2: nss.NSS.ListUsers:input_type -> google.protobuf.Empty
	0, // 3: nss.NSS.GetUser:input_type -> nss.GetRequest
	5, // 4: nss.NSS.ListGroups:input_type -> google.protobuf.Empty
	0, // 5: nss.NSS.GetGroup:input_type -> nss.GetRequest
	1, // 6: nss.NSS.ListUsers:output_type -> nss.Users
	2, // 7: nss.NSS.GetUser:output_type -> nss.User
	3, // 8: nss.NSS.ListGroups:output_type -> nss.Groups
	4, // 9: nss.NSS.GetGroup:output_type -> nss.Group
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_nss_proto_init() }
func file_nss_proto_init() {
	if File_nss_proto != nil {
		return
	}
	file_nss_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nss_proto_rawDesc), len(file_nss_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nss_proto_goTypes,
		DependencyIndexes: file_nss_proto_depIdxs,
		MessageInfos:      file_nss_proto_msgTypes,
	}.Build()
	File_nss_proto = out.File
	file_nss_proto_goTypes = nil
	file_nss_proto_depIdxs = nil
}
