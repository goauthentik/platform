// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pam_session.proto
// Protobuf C++ Version: 6.33.0

#include "pam_session.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pam_session {

inline constexpr SessionStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SessionStatusRequest::SessionStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SessionStatusRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SessionStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionStatusRequestDefaultTypeInternal() {}
  union {
    SessionStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionStatusRequestDefaultTypeInternal _SessionStatusRequest_default_instance_;

inline constexpr RegisterSessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterSessionResponse::RegisterSessionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterSessionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSessionResponseDefaultTypeInternal() {}
  union {
    RegisterSessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSessionResponseDefaultTypeInternal _RegisterSessionResponse_default_instance_;

inline constexpr RegisterSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        local_socket_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_at_{::int64_t{0}},
        pid_{0u},
        ppid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterSessionRequest::RegisterSessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterSessionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSessionRequestDefaultTypeInternal() {}
  union {
    RegisterSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSessionRequestDefaultTypeInternal _RegisterSessionRequest_default_instance_;

inline constexpr CloseSessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CloseSessionResponse::CloseSessionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CloseSessionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CloseSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseSessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseSessionResponseDefaultTypeInternal() {}
  union {
    CloseSessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseSessionResponseDefaultTypeInternal _CloseSessionResponse_default_instance_;

inline constexpr CloseSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CloseSessionRequest::CloseSessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CloseSessionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CloseSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseSessionRequestDefaultTypeInternal() {}
  union {
    CloseSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseSessionRequestDefaultTypeInternal _CloseSessionRequest_default_instance_;

inline constexpr SessionStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expiry_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SessionStatusResponse::SessionStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SessionStatusResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SessionStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionStatusResponseDefaultTypeInternal() {}
  union {
    SessionStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionStatusResponseDefaultTypeInternal _SessionStatusResponse_default_instance_;
}  // namespace pam_session
static constexpr const ::_pb::EnumDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_enum_descriptors_pam_5fsession_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_service_descriptors_pam_5fsession_2eproto = nullptr;
const ::uint32_t
    TableStruct_pam_5fsession_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_.token_hash_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_.local_socket_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_.expires_at_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_.pid_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionRequest, _impl_.ppid_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionResponse, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::pam_session::RegisterSessionResponse, _impl_.error_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam_session::SessionStatusRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam_session::SessionStatusRequest, _impl_.session_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam_session::SessionStatusResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam_session::SessionStatusResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::pam_session::SessionStatusResponse, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::pam_session::SessionStatusResponse, _impl_.expiry_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam_session::CloseSessionRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam_session::CloseSessionRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::pam_session::CloseSessionRequest, _impl_.pid_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam_session::CloseSessionResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam_session::CloseSessionResponse, _impl_.success_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::pam_session::RegisterSessionRequest)},
        {17, sizeof(::pam_session::RegisterSessionResponse)},
        {26, sizeof(::pam_session::SessionStatusRequest)},
        {31, sizeof(::pam_session::SessionStatusResponse)},
        {40, sizeof(::pam_session::CloseSessionRequest)},
        {47, sizeof(::pam_session::CloseSessionResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::pam_session::_RegisterSessionRequest_default_instance_._instance,
    &::pam_session::_RegisterSessionResponse_default_instance_._instance,
    &::pam_session::_SessionStatusRequest_default_instance_._instance,
    &::pam_session::_SessionStatusResponse_default_instance_._instance,
    &::pam_session::_CloseSessionRequest_default_instance_._instance,
    &::pam_session::_CloseSessionResponse_default_instance_._instance,
};
const char descriptor_table_protodef_pam_5fsession_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021pam_session.proto\022\013pam_session\032\037google"
    "/protobuf/timestamp.proto\"\227\001\n\026RegisterSe"
    "ssionRequest\022\022\n\nsession_id\030\001 \001(\t\022\020\n\010user"
    "name\030\002 \001(\t\022\022\n\ntoken_hash\030\003 \001(\t\022\024\n\014local_"
    "socket\030\004 \001(\t\022\022\n\nexpires_at\030\005 \001(\003\022\013\n\003pid\030"
    "\006 \001(\r\022\014\n\004ppid\030\007 \001(\r\"M\n\027RegisterSessionRe"
    "sponse\022\017\n\007success\030\001 \001(\010\022\022\n\nsession_id\030\002 "
    "\001(\t\022\r\n\005error\030\003 \001(\t\"*\n\024SessionStatusReque"
    "st\022\022\n\nsession_id\030\001 \001(\t\"c\n\025SessionStatusR"
    "esponse\022\017\n\007success\030\001 \001(\010\022\r\n\005error\030\002 \001(\t\022"
    "*\n\006expiry\030\003 \001(\0132\032.google.protobuf.Timest"
    "amp\"6\n\023CloseSessionRequest\022\022\n\nsession_id"
    "\030\001 \001(\t\022\013\n\003pid\030\002 \001(\r\"\'\n\024CloseSessionRespo"
    "nse\022\017\n\007success\030\001 \001(\0102\233\002\n\016SessionManager\022"
    "\\\n\017RegisterSession\022#.pam_session.Registe"
    "rSessionRequest\032$.pam_session.RegisterSe"
    "ssionResponse\022V\n\rSessionStatus\022!.pam_ses"
    "sion.SessionStatusRequest\032\".pam_session."
    "SessionStatusResponse\022S\n\014CloseSession\022 ."
    "pam_session.CloseSessionRequest\032!.pam_se"
    "ssion.CloseSessionResponseB\013Z\006pkg/pb\272\002\000b"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_pam_5fsession_2eproto_deps[1] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_pam_5fsession_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_pam_5fsession_2eproto = {
    false,
    false,
    847,
    descriptor_table_protodef_pam_5fsession_2eproto,
    "pam_session.proto",
    &descriptor_table_pam_5fsession_2eproto_once,
    descriptor_table_pam_5fsession_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_pam_5fsession_2eproto::offsets,
    file_level_enum_descriptors_pam_5fsession_2eproto,
    file_level_service_descriptors_pam_5fsession_2eproto,
};
namespace pam_session {
// ===================================================================

class RegisterSessionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegisterSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_._has_bits_);
};

RegisterSessionRequest::RegisterSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterSessionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam_session.RegisterSessionRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterSessionRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam_session::RegisterSessionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_id_(arena, from.session_id_),
        username_(arena, from.username_),
        token_hash_(arena, from.token_hash_),
        local_socket_(arena, from.local_socket_) {}

RegisterSessionRequest::RegisterSessionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterSessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterSessionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, expires_at_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, expires_at_),
           offsetof(Impl_, ppid_) -
               offsetof(Impl_, expires_at_) +
               sizeof(Impl_::ppid_));

  // @@protoc_insertion_point(copy_constructor:pam_session.RegisterSessionRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterSessionRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        session_id_(arena),
        username_(arena),
        token_hash_(arena),
        local_socket_(arena) {}

inline void RegisterSessionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, expires_at_),
           0,
           offsetof(Impl_, ppid_) -
               offsetof(Impl_, expires_at_) +
               sizeof(Impl_::ppid_));
}
RegisterSessionRequest::~RegisterSessionRequest() {
  // @@protoc_insertion_point(destructor:pam_session.RegisterSessionRequest)
  SharedDtor(*this);
}
inline void RegisterSessionRequest::SharedDtor(MessageLite& self) {
  RegisterSessionRequest& this_ = static_cast<RegisterSessionRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.username_.Destroy();
  this_._impl_.token_hash_.Destroy();
  this_._impl_.local_socket_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterSessionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterSessionRequest(arena);
}
constexpr auto RegisterSessionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterSessionRequest),
                                            alignof(RegisterSessionRequest));
}
constexpr auto RegisterSessionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterSessionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterSessionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterSessionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterSessionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterSessionRequest>(), &RegisterSessionRequest::ByteSizeLong,
              &RegisterSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_._cached_size_),
          false,
      },
      &RegisterSessionRequest::kDescriptorMethods,
      &descriptor_table_pam_5fsession_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegisterSessionRequest_class_data_ =
        RegisterSessionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegisterSessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterSessionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterSessionRequest_class_data_.tc_table);
  return RegisterSessionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 83, 2>
RegisterSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RegisterSessionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam_session::RegisterSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string session_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.session_id_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.username_)}},
    // string token_hash = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.token_hash_)}},
    // string local_socket = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.local_socket_)}},
    // int64 expires_at = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RegisterSessionRequest, _impl_.expires_at_), 4>(),
     {40, 4, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.expires_at_)}},
    // uint32 pid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterSessionRequest, _impl_.pid_), 5>(),
     {48, 5, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.pid_)}},
    // uint32 ppid = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterSessionRequest, _impl_.ppid_), 6>(),
     {56, 6, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.ppid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.username_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token_hash = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.token_hash_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string local_socket = 4;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.local_socket_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 expires_at = 5;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.expires_at_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // uint32 pid = 6;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.pid_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 ppid = 7;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.ppid_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\42\12\10\12\14\0\0\0"
    "pam_session.RegisterSessionRequest"
    "session_id"
    "username"
    "token_hash"
    "local_socket"
  }},
};
PROTOBUF_NOINLINE void RegisterSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pam_session.RegisterSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      _impl_.token_hash_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      _impl_.local_socket_.ClearNonDefaultToEmpty();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000070U)) {
    ::memset(&_impl_.expires_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ppid_) -
        reinterpret_cast<char*>(&_impl_.expires_at_)) + sizeof(_impl_.ppid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterSessionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterSessionRequest& this_ = static_cast<const RegisterSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterSessionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam_session.RegisterSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string session_id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.RegisterSessionRequest.session_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string username = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_username().empty()) {
      const ::std::string& _s = this_._internal_username();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.RegisterSessionRequest.username");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string token_hash = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (!this_._internal_token_hash().empty()) {
      const ::std::string& _s = this_._internal_token_hash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.RegisterSessionRequest.token_hash");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string local_socket = 4;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (!this_._internal_local_socket().empty()) {
      const ::std::string& _s = this_._internal_local_socket();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.RegisterSessionRequest.local_socket");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // int64 expires_at = 5;
  if (CheckHasBit(cached_has_bits, 0x00000010U)) {
    if (this_._internal_expires_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_expires_at(), target);
    }
  }

  // uint32 pid = 6;
  if (CheckHasBit(cached_has_bits, 0x00000020U)) {
    if (this_._internal_pid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_pid(), target);
    }
  }

  // uint32 ppid = 7;
  if (CheckHasBit(cached_has_bits, 0x00000040U)) {
    if (this_._internal_ppid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_ppid(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam_session.RegisterSessionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterSessionRequest::ByteSizeLong(const MessageLite& base) {
  const RegisterSessionRequest& this_ = static_cast<const RegisterSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterSessionRequest::ByteSizeLong() const {
  const RegisterSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam_session.RegisterSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000007fU)) {
    // string session_id = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string username = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_username().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_username());
      }
    }
    // string token_hash = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!this_._internal_token_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_token_hash());
      }
    }
    // string local_socket = 4;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (!this_._internal_local_socket().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_local_socket());
      }
    }
    // int64 expires_at = 5;
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (this_._internal_expires_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_expires_at());
      }
    }
    // uint32 pid = 6;
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (this_._internal_pid() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_pid());
      }
    }
    // uint32 ppid = 7;
    if (CheckHasBit(cached_has_bits, 0x00000040U)) {
      if (this_._internal_ppid() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_ppid());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<RegisterSessionRequest*>(&to_msg);
  auto& from = static_cast<const RegisterSessionRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam_session.RegisterSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000007fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_username().empty()) {
        _this->_internal_set_username(from._internal_username());
      } else {
        if (_this->_impl_.username_.IsDefault()) {
          _this->_internal_set_username("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!from._internal_token_hash().empty()) {
        _this->_internal_set_token_hash(from._internal_token_hash());
      } else {
        if (_this->_impl_.token_hash_.IsDefault()) {
          _this->_internal_set_token_hash("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (!from._internal_local_socket().empty()) {
        _this->_internal_set_local_socket(from._internal_local_socket());
      } else {
        if (_this->_impl_.local_socket_.IsDefault()) {
          _this->_internal_set_local_socket("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (from._internal_expires_at() != 0) {
        _this->_impl_.expires_at_ = from._impl_.expires_at_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (from._internal_pid() != 0) {
        _this->_impl_.pid_ = from._impl_.pid_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000040U)) {
      if (from._internal_ppid() != 0) {
        _this->_impl_.ppid_ = from._impl_.ppid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void RegisterSessionRequest::CopyFrom(const RegisterSessionRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam_session.RegisterSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterSessionRequest::InternalSwap(RegisterSessionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_hash_, &other->_impl_.token_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_socket_, &other->_impl_.local_socket_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.ppid_)
      + sizeof(RegisterSessionRequest::_impl_.ppid_)
      - PROTOBUF_FIELD_OFFSET(RegisterSessionRequest, _impl_.expires_at_)>(
          reinterpret_cast<char*>(&_impl_.expires_at_),
          reinterpret_cast<char*>(&other->_impl_.expires_at_));
}

::google::protobuf::Metadata RegisterSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterSessionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegisterSessionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_._has_bits_);
};

RegisterSessionResponse::RegisterSessionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterSessionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam_session.RegisterSessionResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterSessionResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam_session::RegisterSessionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_id_(arena, from.session_id_),
        error_(arena, from.error_) {}

RegisterSessionResponse::RegisterSessionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterSessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterSessionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterSessionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:pam_session.RegisterSessionResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterSessionResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        session_id_(arena),
        error_(arena) {}

inline void RegisterSessionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
RegisterSessionResponse::~RegisterSessionResponse() {
  // @@protoc_insertion_point(destructor:pam_session.RegisterSessionResponse)
  SharedDtor(*this);
}
inline void RegisterSessionResponse::SharedDtor(MessageLite& self) {
  RegisterSessionResponse& this_ = static_cast<RegisterSessionResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.error_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterSessionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterSessionResponse(arena);
}
constexpr auto RegisterSessionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterSessionResponse),
                                            alignof(RegisterSessionResponse));
}
constexpr auto RegisterSessionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterSessionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterSessionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterSessionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterSessionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterSessionResponse>(), &RegisterSessionResponse::ByteSizeLong,
              &RegisterSessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_._cached_size_),
          false,
      },
      &RegisterSessionResponse::kDescriptorMethods,
      &descriptor_table_pam_5fsession_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegisterSessionResponse_class_data_ =
        RegisterSessionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegisterSessionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterSessionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterSessionResponse_class_data_.tc_table);
  return RegisterSessionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2>
RegisterSessionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RegisterSessionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam_session::RegisterSessionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RegisterSessionResponse, _impl_.success_), 2>(),
     {8, 2, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_.success_)}},
    // string session_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_.session_id_)}},
    // string error = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0,
      PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_.success_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string session_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionResponse, _impl_.error_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\12\5\0\0\0\0"
    "pam_session.RegisterSessionResponse"
    "session_id"
    "error"
  }},
};
PROTOBUF_NOINLINE void RegisterSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pam_session.RegisterSessionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterSessionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterSessionResponse& this_ = static_cast<const RegisterSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterSessionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam_session.RegisterSessionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // bool success = 1;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string session_id = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.RegisterSessionResponse.session_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string error = 3;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_error().empty()) {
      const ::std::string& _s = this_._internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.RegisterSessionResponse.error");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam_session.RegisterSessionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterSessionResponse::ByteSizeLong(const MessageLite& base) {
  const RegisterSessionResponse& this_ = static_cast<const RegisterSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterSessionResponse::ByteSizeLong() const {
  const RegisterSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam_session.RegisterSessionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // string session_id = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string error = 3;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_error());
      }
    }
    // bool success = 1;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterSessionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<RegisterSessionResponse*>(&to_msg);
  auto& from = static_cast<const RegisterSessionResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam_session.RegisterSessionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_error().empty()) {
        _this->_internal_set_error(from._internal_error());
      } else {
        if (_this->_impl_.error_.IsDefault()) {
          _this->_internal_set_error("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void RegisterSessionResponse::CopyFrom(const RegisterSessionResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam_session.RegisterSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterSessionResponse::InternalSwap(RegisterSessionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata RegisterSessionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SessionStatusRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SessionStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SessionStatusRequest, _impl_._has_bits_);
};

SessionStatusRequest::SessionStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SessionStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam_session.SessionStatusRequest)
}
PROTOBUF_NDEBUG_INLINE SessionStatusRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam_session::SessionStatusRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_id_(arena, from.session_id_) {}

SessionStatusRequest::SessionStatusRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SessionStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SessionStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SessionStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:pam_session.SessionStatusRequest)
}
PROTOBUF_NDEBUG_INLINE SessionStatusRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        session_id_(arena) {}

inline void SessionStatusRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SessionStatusRequest::~SessionStatusRequest() {
  // @@protoc_insertion_point(destructor:pam_session.SessionStatusRequest)
  SharedDtor(*this);
}
inline void SessionStatusRequest::SharedDtor(MessageLite& self) {
  SessionStatusRequest& this_ = static_cast<SessionStatusRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SessionStatusRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SessionStatusRequest(arena);
}
constexpr auto SessionStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SessionStatusRequest),
                                            alignof(SessionStatusRequest));
}
constexpr auto SessionStatusRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SessionStatusRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SessionStatusRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SessionStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SessionStatusRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SessionStatusRequest>(), &SessionStatusRequest::ByteSizeLong,
              &SessionStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SessionStatusRequest, _impl_._cached_size_),
          false,
      },
      &SessionStatusRequest::kDescriptorMethods,
      &descriptor_table_pam_5fsession_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SessionStatusRequest_class_data_ =
        SessionStatusRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SessionStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SessionStatusRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SessionStatusRequest_class_data_.tc_table);
  return SessionStatusRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2>
SessionStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SessionStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SessionStatusRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam_session::SessionStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string session_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(SessionStatusRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1;
    {PROTOBUF_FIELD_OFFSET(SessionStatusRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\12\0\0\0\0\0\0"
    "pam_session.SessionStatusRequest"
    "session_id"
  }},
};
PROTOBUF_NOINLINE void SessionStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pam_session.SessionStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    _impl_.session_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SessionStatusRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SessionStatusRequest& this_ = static_cast<const SessionStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SessionStatusRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SessionStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam_session.SessionStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string session_id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.SessionStatusRequest.session_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam_session.SessionStatusRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SessionStatusRequest::ByteSizeLong(const MessageLite& base) {
  const SessionStatusRequest& this_ = static_cast<const SessionStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SessionStatusRequest::ByteSizeLong() const {
  const SessionStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam_session.SessionStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string session_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SessionStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<SessionStatusRequest*>(&to_msg);
  auto& from = static_cast<const SessionStatusRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam_session.SessionStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!from._internal_session_id().empty()) {
      _this->_internal_set_session_id(from._internal_session_id());
    } else {
      if (_this->_impl_.session_id_.IsDefault()) {
        _this->_internal_set_session_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void SessionStatusRequest::CopyFrom(const SessionStatusRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam_session.SessionStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SessionStatusRequest::InternalSwap(SessionStatusRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
}

::google::protobuf::Metadata SessionStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SessionStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SessionStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_._has_bits_);
};

void SessionStatusResponse::clear_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expiry_ != nullptr) _impl_.expiry_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000002U);
}
SessionStatusResponse::SessionStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SessionStatusResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam_session.SessionStatusResponse)
}
PROTOBUF_NDEBUG_INLINE SessionStatusResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam_session::SessionStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        error_(arena, from.error_) {}

SessionStatusResponse::SessionStatusResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SessionStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SessionStatusResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SessionStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.expiry_ = (CheckHasBit(cached_has_bits, 0x00000002U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.expiry_)
                : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:pam_session.SessionStatusResponse)
}
PROTOBUF_NDEBUG_INLINE SessionStatusResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        error_(arena) {}

inline void SessionStatusResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, expiry_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, expiry_) +
               sizeof(Impl_::success_));
}
SessionStatusResponse::~SessionStatusResponse() {
  // @@protoc_insertion_point(destructor:pam_session.SessionStatusResponse)
  SharedDtor(*this);
}
inline void SessionStatusResponse::SharedDtor(MessageLite& self) {
  SessionStatusResponse& this_ = static_cast<SessionStatusResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_.Destroy();
  delete this_._impl_.expiry_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SessionStatusResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SessionStatusResponse(arena);
}
constexpr auto SessionStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SessionStatusResponse),
                                            alignof(SessionStatusResponse));
}
constexpr auto SessionStatusResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SessionStatusResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SessionStatusResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SessionStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SessionStatusResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SessionStatusResponse>(), &SessionStatusResponse::ByteSizeLong,
              &SessionStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_._cached_size_),
          false,
      },
      &SessionStatusResponse::kDescriptorMethods,
      &descriptor_table_pam_5fsession_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SessionStatusResponse_class_data_ =
        SessionStatusResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SessionStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SessionStatusResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SessionStatusResponse_class_data_.tc_table);
  return SessionStatusResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 47, 2>
SessionStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SessionStatusResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam_session::SessionStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SessionStatusResponse, _impl_.success_), 2>(),
     {8, 2, 0,
      PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.success_)}},
    // string error = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.error_)}},
    // .google.protobuf.Timestamp expiry = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0,
      PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.expiry_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.success_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string error = 2;
    {PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.error_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp expiry = 3;
    {PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.expiry_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\41\0\5\0\0\0\0\0"
    "pam_session.SessionStatusResponse"
    "error"
  }},
};
PROTOBUF_NOINLINE void SessionStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pam_session.SessionStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(_impl_.expiry_ != nullptr);
      _impl_.expiry_->Clear();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SessionStatusResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SessionStatusResponse& this_ = static_cast<const SessionStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SessionStatusResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SessionStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam_session.SessionStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // bool success = 1;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string error = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_error().empty()) {
      const ::std::string& _s = this_._internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.SessionStatusResponse.error");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .google.protobuf.Timestamp expiry = 3;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.expiry_, this_._impl_.expiry_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam_session.SessionStatusResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SessionStatusResponse::ByteSizeLong(const MessageLite& base) {
  const SessionStatusResponse& this_ = static_cast<const SessionStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SessionStatusResponse::ByteSizeLong() const {
  const SessionStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam_session.SessionStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // string error = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_error());
      }
    }
    // .google.protobuf.Timestamp expiry = 3;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expiry_);
    }
    // bool success = 1;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SessionStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<SessionStatusResponse*>(&to_msg);
  auto& from = static_cast<const SessionStatusResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:pam_session.SessionStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_error().empty()) {
        _this->_internal_set_error(from._internal_error());
      } else {
        if (_this->_impl_.error_.IsDefault()) {
          _this->_internal_set_error("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(from._impl_.expiry_ != nullptr);
      if (_this->_impl_.expiry_ == nullptr) {
        _this->_impl_.expiry_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.expiry_);
      } else {
        _this->_impl_.expiry_->MergeFrom(*from._impl_.expiry_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void SessionStatusResponse::CopyFrom(const SessionStatusResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam_session.SessionStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SessionStatusResponse::InternalSwap(SessionStatusResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.success_)
      + sizeof(SessionStatusResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(SessionStatusResponse, _impl_.expiry_)>(
          reinterpret_cast<char*>(&_impl_.expiry_),
          reinterpret_cast<char*>(&other->_impl_.expiry_));
}

::google::protobuf::Metadata SessionStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CloseSessionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CloseSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CloseSessionRequest, _impl_._has_bits_);
};

CloseSessionRequest::CloseSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloseSessionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam_session.CloseSessionRequest)
}
PROTOBUF_NDEBUG_INLINE CloseSessionRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam_session::CloseSessionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_id_(arena, from.session_id_) {}

CloseSessionRequest::CloseSessionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CloseSessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloseSessionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CloseSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.pid_ = from._impl_.pid_;

  // @@protoc_insertion_point(copy_constructor:pam_session.CloseSessionRequest)
}
PROTOBUF_NDEBUG_INLINE CloseSessionRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        session_id_(arena) {}

inline void CloseSessionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pid_ = {};
}
CloseSessionRequest::~CloseSessionRequest() {
  // @@protoc_insertion_point(destructor:pam_session.CloseSessionRequest)
  SharedDtor(*this);
}
inline void CloseSessionRequest::SharedDtor(MessageLite& self) {
  CloseSessionRequest& this_ = static_cast<CloseSessionRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CloseSessionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CloseSessionRequest(arena);
}
constexpr auto CloseSessionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CloseSessionRequest),
                                            alignof(CloseSessionRequest));
}
constexpr auto CloseSessionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CloseSessionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CloseSessionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CloseSessionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CloseSessionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CloseSessionRequest>(), &CloseSessionRequest::ByteSizeLong,
              &CloseSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CloseSessionRequest, _impl_._cached_size_),
          false,
      },
      &CloseSessionRequest::kDescriptorMethods,
      &descriptor_table_pam_5fsession_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CloseSessionRequest_class_data_ =
        CloseSessionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CloseSessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CloseSessionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CloseSessionRequest_class_data_.tc_table);
  return CloseSessionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2>
CloseSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CloseSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CloseSessionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam_session::CloseSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 pid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CloseSessionRequest, _impl_.pid_), 1>(),
     {16, 1, 0,
      PROTOBUF_FIELD_OFFSET(CloseSessionRequest, _impl_.pid_)}},
    // string session_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(CloseSessionRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1;
    {PROTOBUF_FIELD_OFFSET(CloseSessionRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 pid = 2;
    {PROTOBUF_FIELD_OFFSET(CloseSessionRequest, _impl_.pid_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\37\12\0\0\0\0\0\0"
    "pam_session.CloseSessionRequest"
    "session_id"
  }},
};
PROTOBUF_NOINLINE void CloseSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pam_session.CloseSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    _impl_.session_id_.ClearNonDefaultToEmpty();
  }
  _impl_.pid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CloseSessionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CloseSessionRequest& this_ = static_cast<const CloseSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CloseSessionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CloseSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam_session.CloseSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string session_id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam_session.CloseSessionRequest.session_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // uint32 pid = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_pid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_pid(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam_session.CloseSessionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CloseSessionRequest::ByteSizeLong(const MessageLite& base) {
  const CloseSessionRequest& this_ = static_cast<const CloseSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CloseSessionRequest::ByteSizeLong() const {
  const CloseSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam_session.CloseSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string session_id = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // uint32 pid = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_pid() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_pid());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CloseSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<CloseSessionRequest*>(&to_msg);
  auto& from = static_cast<const CloseSessionRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam_session.CloseSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_pid() != 0) {
        _this->_impl_.pid_ = from._impl_.pid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void CloseSessionRequest::CopyFrom(const CloseSessionRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam_session.CloseSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CloseSessionRequest::InternalSwap(CloseSessionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  swap(_impl_.pid_, other->_impl_.pid_);
}

::google::protobuf::Metadata CloseSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CloseSessionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CloseSessionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CloseSessionResponse, _impl_._has_bits_);
};

CloseSessionResponse::CloseSessionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloseSessionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam_session.CloseSessionResponse)
}
CloseSessionResponse::CloseSessionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CloseSessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloseSessionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CloseSessionResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CloseSessionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
CloseSessionResponse::~CloseSessionResponse() {
  // @@protoc_insertion_point(destructor:pam_session.CloseSessionResponse)
  SharedDtor(*this);
}
inline void CloseSessionResponse::SharedDtor(MessageLite& self) {
  CloseSessionResponse& this_ = static_cast<CloseSessionResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CloseSessionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CloseSessionResponse(arena);
}
constexpr auto CloseSessionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CloseSessionResponse),
                                            alignof(CloseSessionResponse));
}
constexpr auto CloseSessionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CloseSessionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CloseSessionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CloseSessionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CloseSessionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CloseSessionResponse>(), &CloseSessionResponse::ByteSizeLong,
              &CloseSessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CloseSessionResponse, _impl_._cached_size_),
          false,
      },
      &CloseSessionResponse::kDescriptorMethods,
      &descriptor_table_pam_5fsession_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CloseSessionResponse_class_data_ =
        CloseSessionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CloseSessionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CloseSessionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CloseSessionResponse_class_data_.tc_table);
  return CloseSessionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CloseSessionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CloseSessionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CloseSessionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam_session::CloseSessionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CloseSessionResponse, _impl_.success_), 0>(),
     {8, 0, 0,
      PROTOBUF_FIELD_OFFSET(CloseSessionResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CloseSessionResponse, _impl_.success_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CloseSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pam_session.CloseSessionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CloseSessionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CloseSessionResponse& this_ = static_cast<const CloseSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CloseSessionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CloseSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam_session.CloseSessionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // bool success = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam_session.CloseSessionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CloseSessionResponse::ByteSizeLong(const MessageLite& base) {
  const CloseSessionResponse& this_ = static_cast<const CloseSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CloseSessionResponse::ByteSizeLong() const {
  const CloseSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam_session.CloseSessionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bool success = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CloseSessionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<CloseSessionResponse*>(&to_msg);
  auto& from = static_cast<const CloseSessionResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam_session.CloseSessionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (from._internal_success() != 0) {
      _this->_impl_.success_ = from._impl_.success_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void CloseSessionResponse::CopyFrom(const CloseSessionResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam_session.CloseSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CloseSessionResponse::InternalSwap(CloseSessionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata CloseSessionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pam_session
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_pam_5fsession_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
