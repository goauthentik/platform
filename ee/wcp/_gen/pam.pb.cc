// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pam.proto
// Protobuf C++ Version: 6.33.0

#include "pam.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pam {

inline constexpr TokenAuthRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR TokenAuthRequest::TokenAuthRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TokenAuthRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TokenAuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenAuthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenAuthRequestDefaultTypeInternal() {}
  union {
    TokenAuthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenAuthRequestDefaultTypeInternal _TokenAuthRequest_default_instance_;

inline constexpr InteractiveChallenge::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        txid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prompt_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        debug_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        finished_{false},
        result_{static_cast< ::pam::InteractiveAuthResult >(0)},
        prompt_meta_{static_cast< ::pam::InteractiveChallenge_PromptMeta >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR InteractiveChallenge::InteractiveChallenge(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InteractiveChallenge_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InteractiveChallengeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InteractiveChallengeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InteractiveChallengeDefaultTypeInternal() {}
  union {
    InteractiveChallenge _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InteractiveChallengeDefaultTypeInternal _InteractiveChallenge_default_instance_;

inline constexpr InteractiveAuthInitRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR InteractiveAuthInitRequest::InteractiveAuthInitRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InteractiveAuthInitRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InteractiveAuthInitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InteractiveAuthInitRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InteractiveAuthInitRequestDefaultTypeInternal() {}
  union {
    InteractiveAuthInitRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InteractiveAuthInitRequestDefaultTypeInternal _InteractiveAuthInitRequest_default_instance_;

inline constexpr InteractiveAuthContinueRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        txid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR InteractiveAuthContinueRequest::InteractiveAuthContinueRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InteractiveAuthContinueRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InteractiveAuthContinueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InteractiveAuthContinueRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InteractiveAuthContinueRequestDefaultTypeInternal() {}
  union {
    InteractiveAuthContinueRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InteractiveAuthContinueRequestDefaultTypeInternal _InteractiveAuthContinueRequest_default_instance_;

inline constexpr InteractiveAuthRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : interactive_auth_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR InteractiveAuthRequest::InteractiveAuthRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InteractiveAuthRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InteractiveAuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InteractiveAuthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InteractiveAuthRequestDefaultTypeInternal() {}
  union {
    InteractiveAuthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InteractiveAuthRequestDefaultTypeInternal _InteractiveAuthRequest_default_instance_;

inline constexpr TokenAuthResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        token_{nullptr},
        successful_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TokenAuthResponse::TokenAuthResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TokenAuthResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TokenAuthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenAuthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenAuthResponseDefaultTypeInternal() {}
  union {
    TokenAuthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenAuthResponseDefaultTypeInternal _TokenAuthResponse_default_instance_;

inline constexpr PAMAuthorizationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        response_{nullptr},
        code_{static_cast< ::pam::InteractiveAuthResult >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PAMAuthorizationResponse::PAMAuthorizationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PAMAuthorizationResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PAMAuthorizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PAMAuthorizationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PAMAuthorizationResponseDefaultTypeInternal() {}
  union {
    PAMAuthorizationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PAMAuthorizationResponseDefaultTypeInternal _PAMAuthorizationResponse_default_instance_;
}  // namespace pam
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_pam_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_service_descriptors_pam_2eproto = nullptr;
const ::uint32_t
    TableStruct_pam_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam::TokenAuthRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam::TokenAuthRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::pam::TokenAuthRequest, _impl_.token_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam::TokenAuthResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam::TokenAuthResponse, _impl_.successful_),
        PROTOBUF_FIELD_OFFSET(::pam::TokenAuthResponse, _impl_.token_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthInitRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthInitRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthInitRequest, _impl_.password_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthContinueRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthContinueRequest, _impl_.txid_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthContinueRequest, _impl_.value_),
        0,
        1,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthRequest, _impl_._oneof_case_[0]),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthRequest, _impl_.interactive_auth_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthRequest, _impl_.interactive_auth_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthRequest, _impl_.interactive_auth_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveChallenge, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveChallenge, _impl_.txid_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveChallenge, _impl_.finished_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveChallenge, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveChallenge, _impl_.prompt_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveChallenge, _impl_.prompt_meta_),
        PROTOBUF_FIELD_OFFSET(::pam::InteractiveChallenge, _impl_.debug_info_),
        0,
        3,
        4,
        1,
        5,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::pam::PAMAuthorizationResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::pam::PAMAuthorizationResponse, _impl_.response_),
        PROTOBUF_FIELD_OFFSET(::pam::PAMAuthorizationResponse, _impl_.code_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::pam::TokenAuthRequest)},
        {7, sizeof(::pam::TokenAuthResponse)},
        {14, sizeof(::pam::InteractiveAuthInitRequest)},
        {21, sizeof(::pam::InteractiveAuthContinueRequest)},
        {28, sizeof(::pam::InteractiveAuthRequest)},
        {33, sizeof(::pam::InteractiveChallenge)},
        {48, sizeof(::pam::PAMAuthorizationResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::pam::_TokenAuthRequest_default_instance_._instance,
    &::pam::_TokenAuthResponse_default_instance_._instance,
    &::pam::_InteractiveAuthInitRequest_default_instance_._instance,
    &::pam::_InteractiveAuthContinueRequest_default_instance_._instance,
    &::pam::_InteractiveAuthRequest_default_instance_._instance,
    &::pam::_InteractiveChallenge_default_instance_._instance,
    &::pam::_PAMAuthorizationResponse_default_instance_._instance,
};
const char descriptor_table_protodef_pam_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tpam.proto\022\003pam\032\013agent.proto\032\020agent_aut"
    "h.proto\"3\n\020TokenAuthRequest\022\020\n\010username\030"
    "\001 \001(\t\022\r\n\005token\030\002 \001(\t\"D\n\021TokenAuthRespons"
    "e\022\022\n\nsuccessful\030\001 \001(\010\022\033\n\005token\030\002 \001(\0132\014.a"
    "gent.Token\"@\n\032InteractiveAuthInitRequest"
    "\022\020\n\010username\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"=\n\036"
    "InteractiveAuthContinueRequest\022\014\n\004txid\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\t\"\226\001\n\026InteractiveAuthR"
    "equest\022/\n\004init\030\001 \001(\0132\037.pam.InteractiveAu"
    "thInitRequestH\000\0227\n\010continue\030\002 \001(\0132#.pam."
    "InteractiveAuthContinueRequestH\000B\022\n\020inte"
    "ractive_auth\"\361\002\n\024InteractiveChallenge\022\014\n"
    "\004txid\030\001 \001(\t\022\020\n\010finished\030\002 \001(\010\022*\n\006result\030"
    "\003 \001(\0162\032.pam.InteractiveAuthResult\022\016\n\006pro"
    "mpt\030\004 \001(\t\0229\n\013prompt_meta\030\005 \001(\0162$.pam.Int"
    "eractiveChallenge.PromptMeta\022\022\n\ndebug_in"
    "fo\030\006 \001(\t\"\255\001\n\nPromptMeta\022\017\n\013UNSPECIFIED\020\000"
    "\022\027\n\023PAM_PROMPT_ECHO_OFF\020\001\022\026\n\022PAM_PROMPT_"
    "ECHO_ON\020\002\022\021\n\rPAM_ERROR_MSG\020\003\022\021\n\rPAM_TEXT"
    "_INFO\020\004\022\022\n\016PAM_RADIO_TYPE\020\005\022\025\n\021PAM_BINAR"
    "Y_PROMPT\020\007\022\014\n\010PASSWORD\020d\"u\n\030PAMAuthoriza"
    "tionResponse\022/\n\010response\030\001 \001(\0132\035.agent_a"
    "uth.AuthorizeResponse\022(\n\004code\030\002 \001(\0162\032.pa"
    "m.InteractiveAuthResult*O\n\025InteractiveAu"
    "thResult\022\017\n\013PAM_SUCCESS\020\000\022\023\n\017PAM_PERM_DE"
    "NIED\020\006\022\020\n\014PAM_AUTH_ERR\020\0072\326\001\n\003PAM\022:\n\tToke"
    "nAuth\022\025.pam.TokenAuthRequest\032\026.pam.Token"
    "AuthResponse\022I\n\017InteractiveAuth\022\033.pam.In"
    "teractiveAuthRequest\032\031.pam.InteractiveCh"
    "allenge\022H\n\tAuthorize\022\034.agent_auth.Author"
    "izeRequest\032\035.pam.PAMAuthorizationRespons"
    "eB\013Z\006pkg/pb\272\002\000b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_pam_2eproto_deps[2] = {
        &::descriptor_table_agent_2eproto,
        &::descriptor_table_agent_5fauth_2eproto,
};
static ::absl::once_flag descriptor_table_pam_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_pam_2eproto = {
    false,
    false,
    1262,
    descriptor_table_protodef_pam_2eproto,
    "pam.proto",
    &descriptor_table_pam_2eproto_once,
    descriptor_table_pam_2eproto_deps,
    2,
    7,
    schemas,
    file_default_instances,
    TableStruct_pam_2eproto::offsets,
    file_level_enum_descriptors_pam_2eproto,
    file_level_service_descriptors_pam_2eproto,
};
namespace pam {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL InteractiveChallenge_PromptMeta_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pam_2eproto);
  return file_level_enum_descriptors_pam_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t InteractiveChallenge_PromptMeta_internal_data_[] = {
    393216u, 65568u, 2u, 100u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL InteractiveAuthResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pam_2eproto);
  return file_level_enum_descriptors_pam_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t InteractiveAuthResult_internal_data_[] = {
    65536u, 32u, 96u, };
// ===================================================================

class TokenAuthRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TokenAuthRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TokenAuthRequest, _impl_._has_bits_);
};

TokenAuthRequest::TokenAuthRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenAuthRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam.TokenAuthRequest)
}
PROTOBUF_NDEBUG_INLINE TokenAuthRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam::TokenAuthRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        token_(arena, from.token_) {}

TokenAuthRequest::TokenAuthRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TokenAuthRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenAuthRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TokenAuthRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:pam.TokenAuthRequest)
}
PROTOBUF_NDEBUG_INLINE TokenAuthRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        username_(arena),
        token_(arena) {}

inline void TokenAuthRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TokenAuthRequest::~TokenAuthRequest() {
  // @@protoc_insertion_point(destructor:pam.TokenAuthRequest)
  SharedDtor(*this);
}
inline void TokenAuthRequest::SharedDtor(MessageLite& self) {
  TokenAuthRequest& this_ = static_cast<TokenAuthRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TokenAuthRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TokenAuthRequest(arena);
}
constexpr auto TokenAuthRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TokenAuthRequest),
                                            alignof(TokenAuthRequest));
}
constexpr auto TokenAuthRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TokenAuthRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TokenAuthRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TokenAuthRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TokenAuthRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TokenAuthRequest>(), &TokenAuthRequest::ByteSizeLong,
              &TokenAuthRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TokenAuthRequest, _impl_._cached_size_),
          false,
      },
      &TokenAuthRequest::kDescriptorMethods,
      &descriptor_table_pam_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TokenAuthRequest_class_data_ =
        TokenAuthRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TokenAuthRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TokenAuthRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TokenAuthRequest_class_data_.tc_table);
  return TokenAuthRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2>
TokenAuthRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TokenAuthRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TokenAuthRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam::TokenAuthRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(TokenAuthRequest, _impl_.token_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(TokenAuthRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(TokenAuthRequest, _impl_.username_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token = 2;
    {PROTOBUF_FIELD_OFFSET(TokenAuthRequest, _impl_.token_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\10\5\0\0\0\0\0"
    "pam.TokenAuthRequest"
    "username"
    "token"
  }},
};
PROTOBUF_NOINLINE void TokenAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pam.TokenAuthRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.token_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TokenAuthRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TokenAuthRequest& this_ = static_cast<const TokenAuthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TokenAuthRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TokenAuthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam.TokenAuthRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string username = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_username().empty()) {
      const ::std::string& _s = this_._internal_username();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.TokenAuthRequest.username");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string token = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_token().empty()) {
      const ::std::string& _s = this_._internal_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.TokenAuthRequest.token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam.TokenAuthRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TokenAuthRequest::ByteSizeLong(const MessageLite& base) {
  const TokenAuthRequest& this_ = static_cast<const TokenAuthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TokenAuthRequest::ByteSizeLong() const {
  const TokenAuthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam.TokenAuthRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string username = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_username().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_username());
      }
    }
    // string token = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_token());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TokenAuthRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<TokenAuthRequest*>(&to_msg);
  auto& from = static_cast<const TokenAuthRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam.TokenAuthRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_username().empty()) {
        _this->_internal_set_username(from._internal_username());
      } else {
        if (_this->_impl_.username_.IsDefault()) {
          _this->_internal_set_username("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_token().empty()) {
        _this->_internal_set_token(from._internal_token());
      } else {
        if (_this->_impl_.token_.IsDefault()) {
          _this->_internal_set_token("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void TokenAuthRequest::CopyFrom(const TokenAuthRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam.TokenAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TokenAuthRequest::InternalSwap(TokenAuthRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
}

::google::protobuf::Metadata TokenAuthRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TokenAuthResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TokenAuthResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_._has_bits_);
};

void TokenAuthResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.token_ != nullptr) _impl_.token_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000001U);
}
TokenAuthResponse::TokenAuthResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenAuthResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam.TokenAuthResponse)
}
PROTOBUF_NDEBUG_INLINE TokenAuthResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam::TokenAuthResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TokenAuthResponse::TokenAuthResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TokenAuthResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenAuthResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TokenAuthResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.token_ = (CheckHasBit(cached_has_bits, 0x00000001U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.token_)
                : nullptr;
  _impl_.successful_ = from._impl_.successful_;

  // @@protoc_insertion_point(copy_constructor:pam.TokenAuthResponse)
}
PROTOBUF_NDEBUG_INLINE TokenAuthResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TokenAuthResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, token_),
           0,
           offsetof(Impl_, successful_) -
               offsetof(Impl_, token_) +
               sizeof(Impl_::successful_));
}
TokenAuthResponse::~TokenAuthResponse() {
  // @@protoc_insertion_point(destructor:pam.TokenAuthResponse)
  SharedDtor(*this);
}
inline void TokenAuthResponse::SharedDtor(MessageLite& self) {
  TokenAuthResponse& this_ = static_cast<TokenAuthResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.token_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TokenAuthResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TokenAuthResponse(arena);
}
constexpr auto TokenAuthResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TokenAuthResponse),
                                            alignof(TokenAuthResponse));
}
constexpr auto TokenAuthResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TokenAuthResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TokenAuthResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TokenAuthResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TokenAuthResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TokenAuthResponse>(), &TokenAuthResponse::ByteSizeLong,
              &TokenAuthResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_._cached_size_),
          false,
      },
      &TokenAuthResponse::kDescriptorMethods,
      &descriptor_table_pam_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TokenAuthResponse_class_data_ =
        TokenAuthResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TokenAuthResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TokenAuthResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TokenAuthResponse_class_data_.tc_table);
  return TokenAuthResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
TokenAuthResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TokenAuthResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam::TokenAuthResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agent.Token token = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_.token_)}},
    // bool successful = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TokenAuthResponse, _impl_.successful_), 1>(),
     {8, 1, 0,
      PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_.successful_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool successful = 1;
    {PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_.successful_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .agent.Token token = 2;
    {PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_.token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::Token>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TokenAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pam.TokenAuthResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    ABSL_DCHECK(_impl_.token_ != nullptr);
    _impl_.token_->Clear();
  }
  _impl_.successful_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TokenAuthResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TokenAuthResponse& this_ = static_cast<const TokenAuthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TokenAuthResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TokenAuthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam.TokenAuthResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // bool successful = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_successful() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_successful(), target);
    }
  }

  // .agent.Token token = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.token_, this_._impl_.token_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam.TokenAuthResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TokenAuthResponse::ByteSizeLong(const MessageLite& base) {
  const TokenAuthResponse& this_ = static_cast<const TokenAuthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TokenAuthResponse::ByteSizeLong() const {
  const TokenAuthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam.TokenAuthResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // .agent.Token token = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.token_);
    }
    // bool successful = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_successful() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TokenAuthResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<TokenAuthResponse*>(&to_msg);
  auto& from = static_cast<const TokenAuthResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:pam.TokenAuthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      ABSL_DCHECK(from._impl_.token_ != nullptr);
      if (_this->_impl_.token_ == nullptr) {
        _this->_impl_.token_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.token_);
      } else {
        _this->_impl_.token_->MergeFrom(*from._impl_.token_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_successful() != 0) {
        _this->_impl_.successful_ = from._impl_.successful_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void TokenAuthResponse::CopyFrom(const TokenAuthResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam.TokenAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TokenAuthResponse::InternalSwap(TokenAuthResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_.successful_)
      + sizeof(TokenAuthResponse::_impl_.successful_)
      - PROTOBUF_FIELD_OFFSET(TokenAuthResponse, _impl_.token_)>(
          reinterpret_cast<char*>(&_impl_.token_),
          reinterpret_cast<char*>(&other->_impl_.token_));
}

::google::protobuf::Metadata TokenAuthResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InteractiveAuthInitRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InteractiveAuthInitRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InteractiveAuthInitRequest, _impl_._has_bits_);
};

InteractiveAuthInitRequest::InteractiveAuthInitRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveAuthInitRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam.InteractiveAuthInitRequest)
}
PROTOBUF_NDEBUG_INLINE InteractiveAuthInitRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam::InteractiveAuthInitRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        password_(arena, from.password_) {}

InteractiveAuthInitRequest::InteractiveAuthInitRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InteractiveAuthInitRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveAuthInitRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InteractiveAuthInitRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:pam.InteractiveAuthInitRequest)
}
PROTOBUF_NDEBUG_INLINE InteractiveAuthInitRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        username_(arena),
        password_(arena) {}

inline void InteractiveAuthInitRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InteractiveAuthInitRequest::~InteractiveAuthInitRequest() {
  // @@protoc_insertion_point(destructor:pam.InteractiveAuthInitRequest)
  SharedDtor(*this);
}
inline void InteractiveAuthInitRequest::SharedDtor(MessageLite& self) {
  InteractiveAuthInitRequest& this_ = static_cast<InteractiveAuthInitRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InteractiveAuthInitRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InteractiveAuthInitRequest(arena);
}
constexpr auto InteractiveAuthInitRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InteractiveAuthInitRequest),
                                            alignof(InteractiveAuthInitRequest));
}
constexpr auto InteractiveAuthInitRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InteractiveAuthInitRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InteractiveAuthInitRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InteractiveAuthInitRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InteractiveAuthInitRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InteractiveAuthInitRequest>(), &InteractiveAuthInitRequest::ByteSizeLong,
              &InteractiveAuthInitRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InteractiveAuthInitRequest, _impl_._cached_size_),
          false,
      },
      &InteractiveAuthInitRequest::kDescriptorMethods,
      &descriptor_table_pam_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InteractiveAuthInitRequest_class_data_ =
        InteractiveAuthInitRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InteractiveAuthInitRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InteractiveAuthInitRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InteractiveAuthInitRequest_class_data_.tc_table);
  return InteractiveAuthInitRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2>
InteractiveAuthInitRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InteractiveAuthInitRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InteractiveAuthInitRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam::InteractiveAuthInitRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveAuthInitRequest, _impl_.password_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveAuthInitRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(InteractiveAuthInitRequest, _impl_.username_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(InteractiveAuthInitRequest, _impl_.password_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\10\10\0\0\0\0\0"
    "pam.InteractiveAuthInitRequest"
    "username"
    "password"
  }},
};
PROTOBUF_NOINLINE void InteractiveAuthInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pam.InteractiveAuthInitRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InteractiveAuthInitRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InteractiveAuthInitRequest& this_ = static_cast<const InteractiveAuthInitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InteractiveAuthInitRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InteractiveAuthInitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam.InteractiveAuthInitRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string username = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_username().empty()) {
      const ::std::string& _s = this_._internal_username();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.InteractiveAuthInitRequest.username");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string password = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_password().empty()) {
      const ::std::string& _s = this_._internal_password();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.InteractiveAuthInitRequest.password");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam.InteractiveAuthInitRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InteractiveAuthInitRequest::ByteSizeLong(const MessageLite& base) {
  const InteractiveAuthInitRequest& this_ = static_cast<const InteractiveAuthInitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InteractiveAuthInitRequest::ByteSizeLong() const {
  const InteractiveAuthInitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam.InteractiveAuthInitRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string username = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_username().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_username());
      }
    }
    // string password = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_password().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_password());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InteractiveAuthInitRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<InteractiveAuthInitRequest*>(&to_msg);
  auto& from = static_cast<const InteractiveAuthInitRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam.InteractiveAuthInitRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_username().empty()) {
        _this->_internal_set_username(from._internal_username());
      } else {
        if (_this->_impl_.username_.IsDefault()) {
          _this->_internal_set_username("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_password().empty()) {
        _this->_internal_set_password(from._internal_password());
      } else {
        if (_this->_impl_.password_.IsDefault()) {
          _this->_internal_set_password("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void InteractiveAuthInitRequest::CopyFrom(const InteractiveAuthInitRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam.InteractiveAuthInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InteractiveAuthInitRequest::InternalSwap(InteractiveAuthInitRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata InteractiveAuthInitRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InteractiveAuthContinueRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InteractiveAuthContinueRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InteractiveAuthContinueRequest, _impl_._has_bits_);
};

InteractiveAuthContinueRequest::InteractiveAuthContinueRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveAuthContinueRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam.InteractiveAuthContinueRequest)
}
PROTOBUF_NDEBUG_INLINE InteractiveAuthContinueRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam::InteractiveAuthContinueRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        txid_(arena, from.txid_),
        value_(arena, from.value_) {}

InteractiveAuthContinueRequest::InteractiveAuthContinueRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InteractiveAuthContinueRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveAuthContinueRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InteractiveAuthContinueRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:pam.InteractiveAuthContinueRequest)
}
PROTOBUF_NDEBUG_INLINE InteractiveAuthContinueRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        txid_(arena),
        value_(arena) {}

inline void InteractiveAuthContinueRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InteractiveAuthContinueRequest::~InteractiveAuthContinueRequest() {
  // @@protoc_insertion_point(destructor:pam.InteractiveAuthContinueRequest)
  SharedDtor(*this);
}
inline void InteractiveAuthContinueRequest::SharedDtor(MessageLite& self) {
  InteractiveAuthContinueRequest& this_ = static_cast<InteractiveAuthContinueRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.txid_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InteractiveAuthContinueRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InteractiveAuthContinueRequest(arena);
}
constexpr auto InteractiveAuthContinueRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InteractiveAuthContinueRequest),
                                            alignof(InteractiveAuthContinueRequest));
}
constexpr auto InteractiveAuthContinueRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InteractiveAuthContinueRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InteractiveAuthContinueRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InteractiveAuthContinueRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InteractiveAuthContinueRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InteractiveAuthContinueRequest>(), &InteractiveAuthContinueRequest::ByteSizeLong,
              &InteractiveAuthContinueRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InteractiveAuthContinueRequest, _impl_._cached_size_),
          false,
      },
      &InteractiveAuthContinueRequest::kDescriptorMethods,
      &descriptor_table_pam_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InteractiveAuthContinueRequest_class_data_ =
        InteractiveAuthContinueRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InteractiveAuthContinueRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InteractiveAuthContinueRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InteractiveAuthContinueRequest_class_data_.tc_table);
  return InteractiveAuthContinueRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2>
InteractiveAuthContinueRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InteractiveAuthContinueRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InteractiveAuthContinueRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam::InteractiveAuthContinueRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveAuthContinueRequest, _impl_.value_)}},
    // string txid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveAuthContinueRequest, _impl_.txid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string txid = 1;
    {PROTOBUF_FIELD_OFFSET(InteractiveAuthContinueRequest, _impl_.txid_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(InteractiveAuthContinueRequest, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\4\5\0\0\0\0\0"
    "pam.InteractiveAuthContinueRequest"
    "txid"
    "value"
  }},
};
PROTOBUF_NOINLINE void InteractiveAuthContinueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pam.InteractiveAuthContinueRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.txid_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InteractiveAuthContinueRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InteractiveAuthContinueRequest& this_ = static_cast<const InteractiveAuthContinueRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InteractiveAuthContinueRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InteractiveAuthContinueRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam.InteractiveAuthContinueRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string txid = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_txid().empty()) {
      const ::std::string& _s = this_._internal_txid();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.InteractiveAuthContinueRequest.txid");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string value = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_value().empty()) {
      const ::std::string& _s = this_._internal_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.InteractiveAuthContinueRequest.value");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam.InteractiveAuthContinueRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InteractiveAuthContinueRequest::ByteSizeLong(const MessageLite& base) {
  const InteractiveAuthContinueRequest& this_ = static_cast<const InteractiveAuthContinueRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InteractiveAuthContinueRequest::ByteSizeLong() const {
  const InteractiveAuthContinueRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam.InteractiveAuthContinueRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string txid = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_txid().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_txid());
      }
    }
    // string value = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InteractiveAuthContinueRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<InteractiveAuthContinueRequest*>(&to_msg);
  auto& from = static_cast<const InteractiveAuthContinueRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam.InteractiveAuthContinueRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_txid().empty()) {
        _this->_internal_set_txid(from._internal_txid());
      } else {
        if (_this->_impl_.txid_.IsDefault()) {
          _this->_internal_set_txid("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_value().empty()) {
        _this->_internal_set_value(from._internal_value());
      } else {
        if (_this->_impl_.value_.IsDefault()) {
          _this->_internal_set_value("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void InteractiveAuthContinueRequest::CopyFrom(const InteractiveAuthContinueRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam.InteractiveAuthContinueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InteractiveAuthContinueRequest::InternalSwap(InteractiveAuthContinueRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.txid_, &other->_impl_.txid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata InteractiveAuthContinueRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InteractiveAuthRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::pam::InteractiveAuthRequest, _impl_._oneof_case_);
};

void InteractiveAuthRequest::set_allocated_init(::pam::InteractiveAuthInitRequest* PROTOBUF_NULLABLE init) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_interactive_auth();
  if (init) {
    ::google::protobuf::Arena* submessage_arena = init->GetArena();
    if (message_arena != submessage_arena) {
      init = ::google::protobuf::internal::GetOwnedMessage(message_arena, init, submessage_arena);
    }
    set_has_init();
    _impl_.interactive_auth_.init_ = init;
  }
  // @@protoc_insertion_point(field_set_allocated:pam.InteractiveAuthRequest.init)
}
void InteractiveAuthRequest::set_allocated_continue_(::pam::InteractiveAuthContinueRequest* PROTOBUF_NULLABLE continue_) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_interactive_auth();
  if (continue_) {
    ::google::protobuf::Arena* submessage_arena = continue_->GetArena();
    if (message_arena != submessage_arena) {
      continue_ = ::google::protobuf::internal::GetOwnedMessage(message_arena, continue_, submessage_arena);
    }
    set_has_continue_();
    _impl_.interactive_auth_.continue__ = continue_;
  }
  // @@protoc_insertion_point(field_set_allocated:pam.InteractiveAuthRequest.continue)
}
InteractiveAuthRequest::InteractiveAuthRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveAuthRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam.InteractiveAuthRequest)
}
PROTOBUF_NDEBUG_INLINE InteractiveAuthRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam::InteractiveAuthRequest& from_msg)
      : interactive_auth_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

InteractiveAuthRequest::InteractiveAuthRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InteractiveAuthRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveAuthRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InteractiveAuthRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (interactive_auth_case()) {
    case INTERACTIVE_AUTH_NOT_SET:
      break;
      case kInit:
        _impl_.interactive_auth_.init_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.interactive_auth_.init_);
        break;
      case kContinue:
        _impl_.interactive_auth_.continue__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.interactive_auth_.continue__);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:pam.InteractiveAuthRequest)
}
PROTOBUF_NDEBUG_INLINE InteractiveAuthRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : interactive_auth_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void InteractiveAuthRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InteractiveAuthRequest::~InteractiveAuthRequest() {
  // @@protoc_insertion_point(destructor:pam.InteractiveAuthRequest)
  SharedDtor(*this);
}
inline void InteractiveAuthRequest::SharedDtor(MessageLite& self) {
  InteractiveAuthRequest& this_ = static_cast<InteractiveAuthRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_interactive_auth()) {
    this_.clear_interactive_auth();
  }
  this_._impl_.~Impl_();
}

void InteractiveAuthRequest::clear_interactive_auth() {
// @@protoc_insertion_point(one_of_clear_start:pam.InteractiveAuthRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (interactive_auth_case()) {
    case kInit: {
      if (GetArena() == nullptr) {
        delete _impl_.interactive_auth_.init_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.interactive_auth_.init_);
      }
      break;
    }
    case kContinue: {
      if (GetArena() == nullptr) {
        delete _impl_.interactive_auth_.continue__;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.interactive_auth_.continue__);
      }
      break;
    }
    case INTERACTIVE_AUTH_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = INTERACTIVE_AUTH_NOT_SET;
}


inline void* PROTOBUF_NONNULL InteractiveAuthRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InteractiveAuthRequest(arena);
}
constexpr auto InteractiveAuthRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(InteractiveAuthRequest),
                                            alignof(InteractiveAuthRequest));
}
constexpr auto InteractiveAuthRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InteractiveAuthRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InteractiveAuthRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InteractiveAuthRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InteractiveAuthRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InteractiveAuthRequest>(), &InteractiveAuthRequest::ByteSizeLong,
              &InteractiveAuthRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InteractiveAuthRequest, _impl_._cached_size_),
          false,
      },
      &InteractiveAuthRequest::kDescriptorMethods,
      &descriptor_table_pam_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InteractiveAuthRequest_class_data_ =
        InteractiveAuthRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InteractiveAuthRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InteractiveAuthRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InteractiveAuthRequest_class_data_.tc_table);
  return InteractiveAuthRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
InteractiveAuthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    InteractiveAuthRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam::InteractiveAuthRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .pam.InteractiveAuthInitRequest init = 1;
    {PROTOBUF_FIELD_OFFSET(InteractiveAuthRequest, _impl_.interactive_auth_.init_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .pam.InteractiveAuthContinueRequest continue = 2;
    {PROTOBUF_FIELD_OFFSET(InteractiveAuthRequest, _impl_.interactive_auth_.continue__), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::pam::InteractiveAuthInitRequest>()},
      {::_pbi::TcParser::GetTable<::pam::InteractiveAuthContinueRequest>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void InteractiveAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pam.InteractiveAuthRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_interactive_auth();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InteractiveAuthRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InteractiveAuthRequest& this_ = static_cast<const InteractiveAuthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InteractiveAuthRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InteractiveAuthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam.InteractiveAuthRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.interactive_auth_case()) {
    case kInit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.interactive_auth_.init_, this_._impl_.interactive_auth_.init_->GetCachedSize(), target,
          stream);
      break;
    }
    case kContinue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.interactive_auth_.continue__, this_._impl_.interactive_auth_.continue__->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam.InteractiveAuthRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InteractiveAuthRequest::ByteSizeLong(const MessageLite& base) {
  const InteractiveAuthRequest& this_ = static_cast<const InteractiveAuthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InteractiveAuthRequest::ByteSizeLong() const {
  const InteractiveAuthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam.InteractiveAuthRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.interactive_auth_case()) {
    // .pam.InteractiveAuthInitRequest init = 1;
    case kInit: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.interactive_auth_.init_);
      break;
    }
    // .pam.InteractiveAuthContinueRequest continue = 2;
    case kContinue: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.interactive_auth_.continue__);
      break;
    }
    case INTERACTIVE_AUTH_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InteractiveAuthRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<InteractiveAuthRequest*>(&to_msg);
  auto& from = static_cast<const InteractiveAuthRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:pam.InteractiveAuthRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (const uint32_t oneof_from_case =
          from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_interactive_auth();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kInit: {
        if (oneof_needs_init) {
          _this->_impl_.interactive_auth_.init_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.interactive_auth_.init_);
        } else {
          _this->_impl_.interactive_auth_.init_->MergeFrom(*from._impl_.interactive_auth_.init_);
        }
        break;
      }
      case kContinue: {
        if (oneof_needs_init) {
          _this->_impl_.interactive_auth_.continue__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.interactive_auth_.continue__);
        } else {
          _this->_impl_.interactive_auth_.continue__->MergeFrom(*from._impl_.interactive_auth_.continue__);
        }
        break;
      }
      case INTERACTIVE_AUTH_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void InteractiveAuthRequest::CopyFrom(const InteractiveAuthRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam.InteractiveAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InteractiveAuthRequest::InternalSwap(InteractiveAuthRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.interactive_auth_, other->_impl_.interactive_auth_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata InteractiveAuthRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InteractiveChallenge::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InteractiveChallenge>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_._has_bits_);
};

InteractiveChallenge::InteractiveChallenge(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveChallenge_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam.InteractiveChallenge)
}
PROTOBUF_NDEBUG_INLINE InteractiveChallenge::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam::InteractiveChallenge& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        txid_(arena, from.txid_),
        prompt_(arena, from.prompt_),
        debug_info_(arena, from.debug_info_) {}

InteractiveChallenge::InteractiveChallenge(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InteractiveChallenge& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InteractiveChallenge_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InteractiveChallenge* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, finished_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, finished_),
           offsetof(Impl_, prompt_meta_) -
               offsetof(Impl_, finished_) +
               sizeof(Impl_::prompt_meta_));

  // @@protoc_insertion_point(copy_constructor:pam.InteractiveChallenge)
}
PROTOBUF_NDEBUG_INLINE InteractiveChallenge::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        txid_(arena),
        prompt_(arena),
        debug_info_(arena) {}

inline void InteractiveChallenge::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, finished_),
           0,
           offsetof(Impl_, prompt_meta_) -
               offsetof(Impl_, finished_) +
               sizeof(Impl_::prompt_meta_));
}
InteractiveChallenge::~InteractiveChallenge() {
  // @@protoc_insertion_point(destructor:pam.InteractiveChallenge)
  SharedDtor(*this);
}
inline void InteractiveChallenge::SharedDtor(MessageLite& self) {
  InteractiveChallenge& this_ = static_cast<InteractiveChallenge&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.txid_.Destroy();
  this_._impl_.prompt_.Destroy();
  this_._impl_.debug_info_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InteractiveChallenge::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InteractiveChallenge(arena);
}
constexpr auto InteractiveChallenge::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InteractiveChallenge),
                                            alignof(InteractiveChallenge));
}
constexpr auto InteractiveChallenge::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InteractiveChallenge_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InteractiveChallenge::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InteractiveChallenge>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InteractiveChallenge::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InteractiveChallenge>(), &InteractiveChallenge::ByteSizeLong,
              &InteractiveChallenge::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_._cached_size_),
          false,
      },
      &InteractiveChallenge::kDescriptorMethods,
      &descriptor_table_pam_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InteractiveChallenge_class_data_ =
        InteractiveChallenge::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InteractiveChallenge::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InteractiveChallenge_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InteractiveChallenge_class_data_.tc_table);
  return InteractiveChallenge_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 53, 2>
InteractiveChallenge::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InteractiveChallenge_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam::InteractiveChallenge>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string txid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.txid_)}},
    // bool finished = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InteractiveChallenge, _impl_.finished_), 3>(),
     {16, 3, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.finished_)}},
    // .pam.InteractiveAuthResult result = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InteractiveChallenge, _impl_.result_), 4>(),
     {24, 4, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.result_)}},
    // string prompt = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.prompt_)}},
    // .pam.InteractiveChallenge.PromptMeta prompt_meta = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InteractiveChallenge, _impl_.prompt_meta_), 5>(),
     {40, 5, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.prompt_meta_)}},
    // string debug_info = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 2, 0,
      PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.debug_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string txid = 1;
    {PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.txid_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool finished = 2;
    {PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.finished_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .pam.InteractiveAuthResult result = 3;
    {PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.result_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string prompt = 4;
    {PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.prompt_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .pam.InteractiveChallenge.PromptMeta prompt_meta = 5;
    {PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.prompt_meta_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string debug_info = 6;
    {PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.debug_info_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\4\0\0\6\0\12\0"
    "pam.InteractiveChallenge"
    "txid"
    "prompt"
    "debug_info"
  }},
};
PROTOBUF_NOINLINE void InteractiveChallenge::Clear() {
// @@protoc_insertion_point(message_clear_start:pam.InteractiveChallenge)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.txid_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.prompt_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      _impl_.debug_info_.ClearNonDefaultToEmpty();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000038U)) {
    ::memset(&_impl_.finished_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.prompt_meta_) -
        reinterpret_cast<char*>(&_impl_.finished_)) + sizeof(_impl_.prompt_meta_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InteractiveChallenge::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InteractiveChallenge& this_ = static_cast<const InteractiveChallenge&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InteractiveChallenge::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InteractiveChallenge& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam.InteractiveChallenge)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string txid = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_txid().empty()) {
      const ::std::string& _s = this_._internal_txid();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.InteractiveChallenge.txid");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool finished = 2;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (this_._internal_finished() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_finished(), target);
    }
  }

  // .pam.InteractiveAuthResult result = 3;
  if (CheckHasBit(cached_has_bits, 0x00000010U)) {
    if (this_._internal_result() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_result(), target);
    }
  }

  // string prompt = 4;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_prompt().empty()) {
      const ::std::string& _s = this_._internal_prompt();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.InteractiveChallenge.prompt");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .pam.InteractiveChallenge.PromptMeta prompt_meta = 5;
  if (CheckHasBit(cached_has_bits, 0x00000020U)) {
    if (this_._internal_prompt_meta() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_prompt_meta(), target);
    }
  }

  // string debug_info = 6;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (!this_._internal_debug_info().empty()) {
      const ::std::string& _s = this_._internal_debug_info();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pam.InteractiveChallenge.debug_info");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam.InteractiveChallenge)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InteractiveChallenge::ByteSizeLong(const MessageLite& base) {
  const InteractiveChallenge& this_ = static_cast<const InteractiveChallenge&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InteractiveChallenge::ByteSizeLong() const {
  const InteractiveChallenge& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam.InteractiveChallenge)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000003fU)) {
    // string txid = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_txid().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_txid());
      }
    }
    // string prompt = 4;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_prompt().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_prompt());
      }
    }
    // string debug_info = 6;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!this_._internal_debug_info().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_debug_info());
      }
    }
    // bool finished = 2;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (this_._internal_finished() != 0) {
        total_size += 2;
      }
    }
    // .pam.InteractiveAuthResult result = 3;
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (this_._internal_result() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
      }
    }
    // .pam.InteractiveChallenge.PromptMeta prompt_meta = 5;
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (this_._internal_prompt_meta() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_prompt_meta());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InteractiveChallenge::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<InteractiveChallenge*>(&to_msg);
  auto& from = static_cast<const InteractiveChallenge&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:pam.InteractiveChallenge)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000003fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_txid().empty()) {
        _this->_internal_set_txid(from._internal_txid());
      } else {
        if (_this->_impl_.txid_.IsDefault()) {
          _this->_internal_set_txid("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_prompt().empty()) {
        _this->_internal_set_prompt(from._internal_prompt());
      } else {
        if (_this->_impl_.prompt_.IsDefault()) {
          _this->_internal_set_prompt("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!from._internal_debug_info().empty()) {
        _this->_internal_set_debug_info(from._internal_debug_info());
      } else {
        if (_this->_impl_.debug_info_.IsDefault()) {
          _this->_internal_set_debug_info("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (from._internal_finished() != 0) {
        _this->_impl_.finished_ = from._impl_.finished_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (from._internal_result() != 0) {
        _this->_impl_.result_ = from._impl_.result_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (from._internal_prompt_meta() != 0) {
        _this->_impl_.prompt_meta_ = from._impl_.prompt_meta_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void InteractiveChallenge::CopyFrom(const InteractiveChallenge& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam.InteractiveChallenge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InteractiveChallenge::InternalSwap(InteractiveChallenge* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.txid_, &other->_impl_.txid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prompt_, &other->_impl_.prompt_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.debug_info_, &other->_impl_.debug_info_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.prompt_meta_)
      + sizeof(InteractiveChallenge::_impl_.prompt_meta_)
      - PROTOBUF_FIELD_OFFSET(InteractiveChallenge, _impl_.finished_)>(
          reinterpret_cast<char*>(&_impl_.finished_),
          reinterpret_cast<char*>(&other->_impl_.finished_));
}

::google::protobuf::Metadata InteractiveChallenge::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PAMAuthorizationResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PAMAuthorizationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_._has_bits_);
};

void PAMAuthorizationResponse::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000001U);
}
PAMAuthorizationResponse::PAMAuthorizationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PAMAuthorizationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pam.PAMAuthorizationResponse)
}
PROTOBUF_NDEBUG_INLINE PAMAuthorizationResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::pam::PAMAuthorizationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PAMAuthorizationResponse::PAMAuthorizationResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PAMAuthorizationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PAMAuthorizationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PAMAuthorizationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (CheckHasBit(cached_has_bits, 0x00000001U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_)
                : nullptr;
  _impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:pam.PAMAuthorizationResponse)
}
PROTOBUF_NDEBUG_INLINE PAMAuthorizationResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PAMAuthorizationResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, response_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, response_) +
               sizeof(Impl_::code_));
}
PAMAuthorizationResponse::~PAMAuthorizationResponse() {
  // @@protoc_insertion_point(destructor:pam.PAMAuthorizationResponse)
  SharedDtor(*this);
}
inline void PAMAuthorizationResponse::SharedDtor(MessageLite& self) {
  PAMAuthorizationResponse& this_ = static_cast<PAMAuthorizationResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PAMAuthorizationResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PAMAuthorizationResponse(arena);
}
constexpr auto PAMAuthorizationResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PAMAuthorizationResponse),
                                            alignof(PAMAuthorizationResponse));
}
constexpr auto PAMAuthorizationResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PAMAuthorizationResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PAMAuthorizationResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PAMAuthorizationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PAMAuthorizationResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PAMAuthorizationResponse>(), &PAMAuthorizationResponse::ByteSizeLong,
              &PAMAuthorizationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_._cached_size_),
          false,
      },
      &PAMAuthorizationResponse::kDescriptorMethods,
      &descriptor_table_pam_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PAMAuthorizationResponse_class_data_ =
        PAMAuthorizationResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PAMAuthorizationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PAMAuthorizationResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PAMAuthorizationResponse_class_data_.tc_table);
  return PAMAuthorizationResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
PAMAuthorizationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PAMAuthorizationResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pam::PAMAuthorizationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .pam.InteractiveAuthResult code = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PAMAuthorizationResponse, _impl_.code_), 1>(),
     {16, 1, 0,
      PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_.code_)}},
    // .agent_auth.AuthorizeResponse response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent_auth.AuthorizeResponse response = 1;
    {PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .pam.InteractiveAuthResult code = 2;
    {PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_.code_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent_auth::AuthorizeResponse>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PAMAuthorizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pam.PAMAuthorizationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_.code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PAMAuthorizationResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PAMAuthorizationResponse& this_ = static_cast<const PAMAuthorizationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PAMAuthorizationResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PAMAuthorizationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:pam.PAMAuthorizationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent_auth.AuthorizeResponse response = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
        stream);
  }

  // .pam.InteractiveAuthResult code = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_code() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_code(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pam.PAMAuthorizationResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PAMAuthorizationResponse::ByteSizeLong(const MessageLite& base) {
  const PAMAuthorizationResponse& this_ = static_cast<const PAMAuthorizationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PAMAuthorizationResponse::ByteSizeLong() const {
  const PAMAuthorizationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pam.PAMAuthorizationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // .agent_auth.AuthorizeResponse response = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
    }
    // .pam.InteractiveAuthResult code = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_code() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_code());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PAMAuthorizationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<PAMAuthorizationResponse*>(&to_msg);
  auto& from = static_cast<const PAMAuthorizationResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:pam.PAMAuthorizationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_code() != 0) {
        _this->_impl_.code_ = from._impl_.code_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void PAMAuthorizationResponse::CopyFrom(const PAMAuthorizationResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:pam.PAMAuthorizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PAMAuthorizationResponse::InternalSwap(PAMAuthorizationResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_.code_)
      + sizeof(PAMAuthorizationResponse::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(PAMAuthorizationResponse, _impl_.response_)>(
          reinterpret_cast<char*>(&_impl_.response_),
          reinterpret_cast<char*>(&other->_impl_.response_));
}

::google::protobuf::Metadata PAMAuthorizationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_pam_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
