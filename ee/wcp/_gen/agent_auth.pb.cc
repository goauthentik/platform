// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: agent_auth.proto
// Protobuf C++ Version: 6.33.0

#include "agent_auth.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace agent_auth {

inline constexpr WhoAmIResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR WhoAmIResponse::WhoAmIResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WhoAmIResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WhoAmIResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhoAmIResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhoAmIResponseDefaultTypeInternal() {}
  union {
    WhoAmIResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhoAmIResponseDefaultTypeInternal _WhoAmIResponse_default_instance_;

inline constexpr WhoAmIRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR WhoAmIRequest::WhoAmIRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WhoAmIRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WhoAmIRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhoAmIRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhoAmIRequestDefaultTypeInternal() {}
  union {
    WhoAmIRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhoAmIRequestDefaultTypeInternal _WhoAmIRequest_default_instance_;

inline constexpr TokenExchangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        access_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        expires_in_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR TokenExchangeResponse::TokenExchangeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TokenExchangeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TokenExchangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenExchangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenExchangeResponseDefaultTypeInternal() {}
  union {
    TokenExchangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenExchangeResponseDefaultTypeInternal _TokenExchangeResponse_default_instance_;

inline constexpr TokenExchangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TokenExchangeRequest::TokenExchangeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TokenExchangeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TokenExchangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenExchangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenExchangeRequestDefaultTypeInternal() {}
  union {
    TokenExchangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenExchangeRequestDefaultTypeInternal _TokenExchangeRequest_default_instance_;

inline constexpr CurrentTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        type_{static_cast< ::agent_auth::CurrentTokenRequest_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CurrentTokenRequest::CurrentTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CurrentTokenRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CurrentTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CurrentTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CurrentTokenRequestDefaultTypeInternal() {}
  union {
    CurrentTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CurrentTokenRequestDefaultTypeInternal _CurrentTokenRequest_default_instance_;

inline constexpr AuthorizeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AuthorizeResponse::AuthorizeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AuthorizeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthorizeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorizeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorizeResponseDefaultTypeInternal() {}
  union {
    AuthorizeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorizeResponseDefaultTypeInternal _AuthorizeResponse_default_instance_;

inline constexpr AuthorizeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        service_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AuthorizeRequest::AuthorizeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AuthorizeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthorizeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorizeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorizeRequestDefaultTypeInternal() {}
  union {
    AuthorizeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorizeRequestDefaultTypeInternal _AuthorizeRequest_default_instance_;

inline constexpr CurrentTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        raw_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        token_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CurrentTokenResponse::CurrentTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CurrentTokenResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CurrentTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CurrentTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CurrentTokenResponseDefaultTypeInternal() {}
  union {
    CurrentTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CurrentTokenResponseDefaultTypeInternal _CurrentTokenResponse_default_instance_;
}  // namespace agent_auth
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_agent_5fauth_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_service_descriptors_agent_5fauth_2eproto = nullptr;
const ::uint32_t
    TableStruct_agent_5fauth_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::WhoAmIRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::WhoAmIRequest, _impl_.header_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::WhoAmIResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::WhoAmIResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::WhoAmIResponse, _impl_.body_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenRequest, _impl_.type_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenResponse, _impl_.token_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenResponse, _impl_.raw_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::CurrentTokenResponse, _impl_.url_),
        2,
        3,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::TokenExchangeRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::TokenExchangeRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::TokenExchangeRequest, _impl_.client_id_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::TokenExchangeResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::TokenExchangeResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::TokenExchangeResponse, _impl_.access_token_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::TokenExchangeResponse, _impl_.expires_in_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::AuthorizeRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::AuthorizeRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::AuthorizeRequest, _impl_.service_),
        PROTOBUF_FIELD_OFFSET(::agent_auth::AuthorizeRequest, _impl_.uid_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agent_auth::AuthorizeResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agent_auth::AuthorizeResponse, _impl_.header_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::agent_auth::WhoAmIRequest)},
        {5, sizeof(::agent_auth::WhoAmIResponse)},
        {12, sizeof(::agent_auth::CurrentTokenRequest)},
        {19, sizeof(::agent_auth::CurrentTokenResponse)},
        {30, sizeof(::agent_auth::TokenExchangeRequest)},
        {37, sizeof(::agent_auth::TokenExchangeResponse)},
        {46, sizeof(::agent_auth::AuthorizeRequest)},
        {55, sizeof(::agent_auth::AuthorizeResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::agent_auth::_WhoAmIRequest_default_instance_._instance,
    &::agent_auth::_WhoAmIResponse_default_instance_._instance,
    &::agent_auth::_CurrentTokenRequest_default_instance_._instance,
    &::agent_auth::_CurrentTokenResponse_default_instance_._instance,
    &::agent_auth::_TokenExchangeRequest_default_instance_._instance,
    &::agent_auth::_TokenExchangeResponse_default_instance_._instance,
    &::agent_auth::_AuthorizeRequest_default_instance_._instance,
    &::agent_auth::_AuthorizeResponse_default_instance_._instance,
};
const char descriptor_table_protodef_agent_5fauth_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020agent_auth.proto\022\nagent_auth\032\013agent.pr"
    "oto\"5\n\rWhoAmIRequest\022$\n\006header\030\001 \001(\0132\024.a"
    "gent.RequestHeader\"E\n\016WhoAmIResponse\022%\n\006"
    "header\030\001 \001(\0132\025.agent.ResponseHeader\022\014\n\004b"
    "ody\030\002 \001(\t\"\246\001\n\023CurrentTokenRequest\022$\n\006hea"
    "der\030\001 \001(\0132\024.agent.RequestHeader\0222\n\004type\030"
    "\002 \001(\0162$.agent_auth.CurrentTokenRequest.T"
    "ype\"5\n\004Type\022\017\n\013UNSPECIFIED\020\000\022\014\n\010VERIFIED"
    "\020\001\022\016\n\nUNVERIFIED\020\002\"t\n\024CurrentTokenRespon"
    "se\022%\n\006header\030\001 \001(\0132\025.agent.ResponseHeade"
    "r\022\033\n\005token\030\002 \001(\0132\014.agent.Token\022\013\n\003raw\030\003 "
    "\001(\t\022\013\n\003url\030\004 \001(\t\"O\n\024TokenExchangeRequest"
    "\022$\n\006header\030\001 \001(\0132\024.agent.RequestHeader\022\021"
    "\n\tclient_id\030\002 \001(\t\"h\n\025TokenExchangeRespon"
    "se\022%\n\006header\030\001 \001(\0132\025.agent.ResponseHeade"
    "r\022\024\n\014access_token\030\002 \001(\t\022\022\n\nexpires_in\030\003 "
    "\001(\004\"V\n\020AuthorizeRequest\022$\n\006header\030\001 \001(\0132"
    "\024.agent.RequestHeader\022\017\n\007service\030\002 \001(\t\022\013"
    "\n\003uid\030\003 \001(\t\":\n\021AuthorizeResponse\022%\n\006head"
    "er\030\001 \001(\0132\025.agent.ResponseHeader2\310\002\n\tAgen"
    "tAuth\022\?\n\006WhoAmI\022\031.agent_auth.WhoAmIReque"
    "st\032\032.agent_auth.WhoAmIResponse\022T\n\017GetCur"
    "rentToken\022\037.agent_auth.CurrentTokenReque"
    "st\032 .agent_auth.CurrentTokenResponse\022Z\n\023"
    "CachedTokenExchange\022 .agent_auth.TokenEx"
    "changeRequest\032!.agent_auth.TokenExchange"
    "Response\022H\n\tAuthorize\022\034.agent_auth.Autho"
    "rizeRequest\032\035.agent_auth.AuthorizeRespon"
    "seB\013Z\006pkg/pb\272\002\000b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_agent_5fauth_2eproto_deps[1] = {
        &::descriptor_table_agent_2eproto,
};
static ::absl::once_flag descriptor_table_agent_5fauth_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_agent_5fauth_2eproto = {
    false,
    false,
    1143,
    descriptor_table_protodef_agent_5fauth_2eproto,
    "agent_auth.proto",
    &descriptor_table_agent_5fauth_2eproto_once,
    descriptor_table_agent_5fauth_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_agent_5fauth_2eproto::offsets,
    file_level_enum_descriptors_agent_5fauth_2eproto,
    file_level_service_descriptors_agent_5fauth_2eproto,
};
namespace agent_auth {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CurrentTokenRequest_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_agent_5fauth_2eproto);
  return file_level_enum_descriptors_agent_5fauth_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CurrentTokenRequest_Type_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class WhoAmIRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WhoAmIRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WhoAmIRequest, _impl_._has_bits_);
};

void WhoAmIRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000001U);
}
WhoAmIRequest::WhoAmIRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WhoAmIRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.WhoAmIRequest)
}
PROTOBUF_NDEBUG_INLINE WhoAmIRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::WhoAmIRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WhoAmIRequest::WhoAmIRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WhoAmIRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WhoAmIRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WhoAmIRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000001U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agent_auth.WhoAmIRequest)
}
PROTOBUF_NDEBUG_INLINE WhoAmIRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void WhoAmIRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
WhoAmIRequest::~WhoAmIRequest() {
  // @@protoc_insertion_point(destructor:agent_auth.WhoAmIRequest)
  SharedDtor(*this);
}
inline void WhoAmIRequest::SharedDtor(MessageLite& self) {
  WhoAmIRequest& this_ = static_cast<WhoAmIRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WhoAmIRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WhoAmIRequest(arena);
}
constexpr auto WhoAmIRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WhoAmIRequest),
                                            alignof(WhoAmIRequest));
}
constexpr auto WhoAmIRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WhoAmIRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WhoAmIRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WhoAmIRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WhoAmIRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WhoAmIRequest>(), &WhoAmIRequest::ByteSizeLong,
              &WhoAmIRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WhoAmIRequest, _impl_._cached_size_),
          false,
      },
      &WhoAmIRequest::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WhoAmIRequest_class_data_ =
        WhoAmIRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WhoAmIRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WhoAmIRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WhoAmIRequest_class_data_.tc_table);
  return WhoAmIRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
WhoAmIRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WhoAmIRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WhoAmIRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::WhoAmIRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agent.RequestHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(WhoAmIRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.RequestHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(WhoAmIRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::RequestHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void WhoAmIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.WhoAmIRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WhoAmIRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WhoAmIRequest& this_ = static_cast<const WhoAmIRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WhoAmIRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WhoAmIRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.WhoAmIRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.RequestHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.WhoAmIRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WhoAmIRequest::ByteSizeLong(const MessageLite& base) {
  const WhoAmIRequest& this_ = static_cast<const WhoAmIRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WhoAmIRequest::ByteSizeLong() const {
  const WhoAmIRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.WhoAmIRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .agent.RequestHeader header = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WhoAmIRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<WhoAmIRequest*>(&to_msg);
  auto& from = static_cast<const WhoAmIRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.WhoAmIRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void WhoAmIRequest::CopyFrom(const WhoAmIRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.WhoAmIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WhoAmIRequest::InternalSwap(WhoAmIRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata WhoAmIRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WhoAmIResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WhoAmIResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WhoAmIResponse, _impl_._has_bits_);
};

void WhoAmIResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000002U);
}
WhoAmIResponse::WhoAmIResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WhoAmIResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.WhoAmIResponse)
}
PROTOBUF_NDEBUG_INLINE WhoAmIResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::WhoAmIResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        body_(arena, from.body_) {}

WhoAmIResponse::WhoAmIResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WhoAmIResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WhoAmIResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WhoAmIResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000002U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agent_auth.WhoAmIResponse)
}
PROTOBUF_NDEBUG_INLINE WhoAmIResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        body_(arena) {}

inline void WhoAmIResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
WhoAmIResponse::~WhoAmIResponse() {
  // @@protoc_insertion_point(destructor:agent_auth.WhoAmIResponse)
  SharedDtor(*this);
}
inline void WhoAmIResponse::SharedDtor(MessageLite& self) {
  WhoAmIResponse& this_ = static_cast<WhoAmIResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.body_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WhoAmIResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WhoAmIResponse(arena);
}
constexpr auto WhoAmIResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WhoAmIResponse),
                                            alignof(WhoAmIResponse));
}
constexpr auto WhoAmIResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WhoAmIResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WhoAmIResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WhoAmIResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WhoAmIResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WhoAmIResponse>(), &WhoAmIResponse::ByteSizeLong,
              &WhoAmIResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WhoAmIResponse, _impl_._cached_size_),
          false,
      },
      &WhoAmIResponse::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WhoAmIResponse_class_data_ =
        WhoAmIResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WhoAmIResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WhoAmIResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WhoAmIResponse_class_data_.tc_table);
  return WhoAmIResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2>
WhoAmIResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WhoAmIResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WhoAmIResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::WhoAmIResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string body = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(WhoAmIResponse, _impl_.body_)}},
    // .agent.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0,
      PROTOBUF_FIELD_OFFSET(WhoAmIResponse, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(WhoAmIResponse, _impl_.header_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string body = 2;
    {PROTOBUF_FIELD_OFFSET(WhoAmIResponse, _impl_.body_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::ResponseHeader>()},
  }},
  {{
    "\31\0\4\0\0\0\0\0"
    "agent_auth.WhoAmIResponse"
    "body"
  }},
};
PROTOBUF_NOINLINE void WhoAmIResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.WhoAmIResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.body_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WhoAmIResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WhoAmIResponse& this_ = static_cast<const WhoAmIResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WhoAmIResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WhoAmIResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.WhoAmIResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.ResponseHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // string body = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_body().empty()) {
      const ::std::string& _s = this_._internal_body();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_auth.WhoAmIResponse.body");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.WhoAmIResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WhoAmIResponse::ByteSizeLong(const MessageLite& base) {
  const WhoAmIResponse& this_ = static_cast<const WhoAmIResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WhoAmIResponse::ByteSizeLong() const {
  const WhoAmIResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.WhoAmIResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string body = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_body().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_body());
      }
    }
    // .agent.ResponseHeader header = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WhoAmIResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<WhoAmIResponse*>(&to_msg);
  auto& from = static_cast<const WhoAmIResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.WhoAmIResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_body().empty()) {
        _this->_internal_set_body(from._internal_body());
      } else {
        if (_this->_impl_.body_.IsDefault()) {
          _this->_internal_set_body("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void WhoAmIResponse::CopyFrom(const WhoAmIResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.WhoAmIResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WhoAmIResponse::InternalSwap(WhoAmIResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata WhoAmIResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CurrentTokenRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CurrentTokenRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_._has_bits_);
};

void CurrentTokenRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000001U);
}
CurrentTokenRequest::CurrentTokenRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CurrentTokenRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.CurrentTokenRequest)
}
PROTOBUF_NDEBUG_INLINE CurrentTokenRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::CurrentTokenRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CurrentTokenRequest::CurrentTokenRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CurrentTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CurrentTokenRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CurrentTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000001U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:agent_auth.CurrentTokenRequest)
}
PROTOBUF_NDEBUG_INLINE CurrentTokenRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CurrentTokenRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::type_));
}
CurrentTokenRequest::~CurrentTokenRequest() {
  // @@protoc_insertion_point(destructor:agent_auth.CurrentTokenRequest)
  SharedDtor(*this);
}
inline void CurrentTokenRequest::SharedDtor(MessageLite& self) {
  CurrentTokenRequest& this_ = static_cast<CurrentTokenRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CurrentTokenRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CurrentTokenRequest(arena);
}
constexpr auto CurrentTokenRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CurrentTokenRequest),
                                            alignof(CurrentTokenRequest));
}
constexpr auto CurrentTokenRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CurrentTokenRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CurrentTokenRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CurrentTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CurrentTokenRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CurrentTokenRequest>(), &CurrentTokenRequest::ByteSizeLong,
              &CurrentTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_._cached_size_),
          false,
      },
      &CurrentTokenRequest::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CurrentTokenRequest_class_data_ =
        CurrentTokenRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CurrentTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CurrentTokenRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CurrentTokenRequest_class_data_.tc_table);
  return CurrentTokenRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CurrentTokenRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CurrentTokenRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::CurrentTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agent_auth.CurrentTokenRequest.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CurrentTokenRequest, _impl_.type_), 1>(),
     {16, 1, 0,
      PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_.type_)}},
    // .agent.RequestHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.RequestHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agent_auth.CurrentTokenRequest.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_.type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::RequestHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CurrentTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.CurrentTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CurrentTokenRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CurrentTokenRequest& this_ = static_cast<const CurrentTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CurrentTokenRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CurrentTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.CurrentTokenRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.RequestHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // .agent_auth.CurrentTokenRequest.Type type = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_type(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.CurrentTokenRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CurrentTokenRequest::ByteSizeLong(const MessageLite& base) {
  const CurrentTokenRequest& this_ = static_cast<const CurrentTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CurrentTokenRequest::ByteSizeLong() const {
  const CurrentTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.CurrentTokenRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // .agent.RequestHeader header = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // .agent_auth.CurrentTokenRequest.Type type = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CurrentTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<CurrentTokenRequest*>(&to_msg);
  auto& from = static_cast<const CurrentTokenRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.CurrentTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void CurrentTokenRequest::CopyFrom(const CurrentTokenRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.CurrentTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CurrentTokenRequest::InternalSwap(CurrentTokenRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_.type_)
      + sizeof(CurrentTokenRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CurrentTokenRequest, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata CurrentTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CurrentTokenResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CurrentTokenResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_._has_bits_);
};

void CurrentTokenResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000004U);
}
void CurrentTokenResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.token_ != nullptr) _impl_.token_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000008U);
}
CurrentTokenResponse::CurrentTokenResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CurrentTokenResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.CurrentTokenResponse)
}
PROTOBUF_NDEBUG_INLINE CurrentTokenResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::CurrentTokenResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        raw_(arena, from.raw_),
        url_(arena, from.url_) {}

CurrentTokenResponse::CurrentTokenResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CurrentTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CurrentTokenResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CurrentTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000004U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.token_ = (CheckHasBit(cached_has_bits, 0x00000008U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.token_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agent_auth.CurrentTokenResponse)
}
PROTOBUF_NDEBUG_INLINE CurrentTokenResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        raw_(arena),
        url_(arena) {}

inline void CurrentTokenResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, token_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::token_));
}
CurrentTokenResponse::~CurrentTokenResponse() {
  // @@protoc_insertion_point(destructor:agent_auth.CurrentTokenResponse)
  SharedDtor(*this);
}
inline void CurrentTokenResponse::SharedDtor(MessageLite& self) {
  CurrentTokenResponse& this_ = static_cast<CurrentTokenResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.raw_.Destroy();
  this_._impl_.url_.Destroy();
  delete this_._impl_.header_;
  delete this_._impl_.token_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CurrentTokenResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CurrentTokenResponse(arena);
}
constexpr auto CurrentTokenResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CurrentTokenResponse),
                                            alignof(CurrentTokenResponse));
}
constexpr auto CurrentTokenResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CurrentTokenResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CurrentTokenResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CurrentTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CurrentTokenResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CurrentTokenResponse>(), &CurrentTokenResponse::ByteSizeLong,
              &CurrentTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_._cached_size_),
          false,
      },
      &CurrentTokenResponse::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CurrentTokenResponse_class_data_ =
        CurrentTokenResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CurrentTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CurrentTokenResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CurrentTokenResponse_class_data_.tc_table);
  return CurrentTokenResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 46, 2>
CurrentTokenResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CurrentTokenResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::CurrentTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string url = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0,
      PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.url_)}},
    // .agent.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0,
      PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.header_)}},
    // .agent.Token token = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 3, 1,
      PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.token_)}},
    // string raw = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0,
      PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.raw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.header_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agent.Token token = 2;
    {PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.token_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string raw = 3;
    {PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.raw_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string url = 4;
    {PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.url_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::ResponseHeader>()},
      {::_pbi::TcParser::GetTable<::agent::Token>()},
  }},
  {{
    "\37\0\0\3\3\0\0\0"
    "agent_auth.CurrentTokenResponse"
    "raw"
    "url"
  }},
};
PROTOBUF_NOINLINE void CurrentTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.CurrentTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.raw_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.url_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      ABSL_DCHECK(_impl_.token_ != nullptr);
      _impl_.token_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CurrentTokenResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CurrentTokenResponse& this_ = static_cast<const CurrentTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CurrentTokenResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CurrentTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.CurrentTokenResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.ResponseHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // .agent.Token token = 2;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.token_, this_._impl_.token_->GetCachedSize(), target,
        stream);
  }

  // string raw = 3;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_raw().empty()) {
      const ::std::string& _s = this_._internal_raw();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_auth.CurrentTokenResponse.raw");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string url = 4;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_url().empty()) {
      const ::std::string& _s = this_._internal_url();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_auth.CurrentTokenResponse.url");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.CurrentTokenResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CurrentTokenResponse::ByteSizeLong(const MessageLite& base) {
  const CurrentTokenResponse& this_ = static_cast<const CurrentTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CurrentTokenResponse::ByteSizeLong() const {
  const CurrentTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.CurrentTokenResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    // string raw = 3;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_raw().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_raw());
      }
    }
    // string url = 4;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_url().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_url());
      }
    }
    // .agent.ResponseHeader header = 1;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // .agent.Token token = 2;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.token_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CurrentTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<CurrentTokenResponse*>(&to_msg);
  auto& from = static_cast<const CurrentTokenResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.CurrentTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_raw().empty()) {
        _this->_internal_set_raw(from._internal_raw());
      } else {
        if (_this->_impl_.raw_.IsDefault()) {
          _this->_internal_set_raw("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_url().empty()) {
        _this->_internal_set_url(from._internal_url());
      } else {
        if (_this->_impl_.url_.IsDefault()) {
          _this->_internal_set_url("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      ABSL_DCHECK(from._impl_.token_ != nullptr);
      if (_this->_impl_.token_ == nullptr) {
        _this->_impl_.token_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.token_);
      } else {
        _this->_impl_.token_->MergeFrom(*from._impl_.token_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void CurrentTokenResponse::CopyFrom(const CurrentTokenResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.CurrentTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CurrentTokenResponse::InternalSwap(CurrentTokenResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.raw_, &other->_impl_.raw_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.token_)
      + sizeof(CurrentTokenResponse::_impl_.token_)
      - PROTOBUF_FIELD_OFFSET(CurrentTokenResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata CurrentTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TokenExchangeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TokenExchangeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TokenExchangeRequest, _impl_._has_bits_);
};

void TokenExchangeRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000002U);
}
TokenExchangeRequest::TokenExchangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenExchangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.TokenExchangeRequest)
}
PROTOBUF_NDEBUG_INLINE TokenExchangeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::TokenExchangeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        client_id_(arena, from.client_id_) {}

TokenExchangeRequest::TokenExchangeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TokenExchangeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenExchangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TokenExchangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000002U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agent_auth.TokenExchangeRequest)
}
PROTOBUF_NDEBUG_INLINE TokenExchangeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        client_id_(arena) {}

inline void TokenExchangeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
TokenExchangeRequest::~TokenExchangeRequest() {
  // @@protoc_insertion_point(destructor:agent_auth.TokenExchangeRequest)
  SharedDtor(*this);
}
inline void TokenExchangeRequest::SharedDtor(MessageLite& self) {
  TokenExchangeRequest& this_ = static_cast<TokenExchangeRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_id_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TokenExchangeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TokenExchangeRequest(arena);
}
constexpr auto TokenExchangeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TokenExchangeRequest),
                                            alignof(TokenExchangeRequest));
}
constexpr auto TokenExchangeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TokenExchangeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TokenExchangeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TokenExchangeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TokenExchangeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TokenExchangeRequest>(), &TokenExchangeRequest::ByteSizeLong,
              &TokenExchangeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TokenExchangeRequest, _impl_._cached_size_),
          false,
      },
      &TokenExchangeRequest::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TokenExchangeRequest_class_data_ =
        TokenExchangeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TokenExchangeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TokenExchangeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TokenExchangeRequest_class_data_.tc_table);
  return TokenExchangeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2>
TokenExchangeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TokenExchangeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TokenExchangeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::TokenExchangeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string client_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(TokenExchangeRequest, _impl_.client_id_)}},
    // .agent.RequestHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0,
      PROTOBUF_FIELD_OFFSET(TokenExchangeRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.RequestHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(TokenExchangeRequest, _impl_.header_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string client_id = 2;
    {PROTOBUF_FIELD_OFFSET(TokenExchangeRequest, _impl_.client_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::RequestHeader>()},
  }},
  {{
    "\37\0\11\0\0\0\0\0"
    "agent_auth.TokenExchangeRequest"
    "client_id"
  }},
};
PROTOBUF_NOINLINE void TokenExchangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.TokenExchangeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.client_id_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TokenExchangeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TokenExchangeRequest& this_ = static_cast<const TokenExchangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TokenExchangeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TokenExchangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.TokenExchangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.RequestHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // string client_id = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_client_id().empty()) {
      const ::std::string& _s = this_._internal_client_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_auth.TokenExchangeRequest.client_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.TokenExchangeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TokenExchangeRequest::ByteSizeLong(const MessageLite& base) {
  const TokenExchangeRequest& this_ = static_cast<const TokenExchangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TokenExchangeRequest::ByteSizeLong() const {
  const TokenExchangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.TokenExchangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string client_id = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_client_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_client_id());
      }
    }
    // .agent.RequestHeader header = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TokenExchangeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<TokenExchangeRequest*>(&to_msg);
  auto& from = static_cast<const TokenExchangeRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.TokenExchangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_client_id().empty()) {
        _this->_internal_set_client_id(from._internal_client_id());
      } else {
        if (_this->_impl_.client_id_.IsDefault()) {
          _this->_internal_set_client_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void TokenExchangeRequest::CopyFrom(const TokenExchangeRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.TokenExchangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TokenExchangeRequest::InternalSwap(TokenExchangeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata TokenExchangeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TokenExchangeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TokenExchangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_._has_bits_);
};

void TokenExchangeResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000002U);
}
TokenExchangeResponse::TokenExchangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenExchangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.TokenExchangeResponse)
}
PROTOBUF_NDEBUG_INLINE TokenExchangeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::TokenExchangeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        access_token_(arena, from.access_token_) {}

TokenExchangeResponse::TokenExchangeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TokenExchangeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TokenExchangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TokenExchangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000002U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.expires_in_ = from._impl_.expires_in_;

  // @@protoc_insertion_point(copy_constructor:agent_auth.TokenExchangeResponse)
}
PROTOBUF_NDEBUG_INLINE TokenExchangeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        access_token_(arena) {}

inline void TokenExchangeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, expires_in_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::expires_in_));
}
TokenExchangeResponse::~TokenExchangeResponse() {
  // @@protoc_insertion_point(destructor:agent_auth.TokenExchangeResponse)
  SharedDtor(*this);
}
inline void TokenExchangeResponse::SharedDtor(MessageLite& self) {
  TokenExchangeResponse& this_ = static_cast<TokenExchangeResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.access_token_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TokenExchangeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TokenExchangeResponse(arena);
}
constexpr auto TokenExchangeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TokenExchangeResponse),
                                            alignof(TokenExchangeResponse));
}
constexpr auto TokenExchangeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TokenExchangeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TokenExchangeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TokenExchangeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TokenExchangeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TokenExchangeResponse>(), &TokenExchangeResponse::ByteSizeLong,
              &TokenExchangeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_._cached_size_),
          false,
      },
      &TokenExchangeResponse::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TokenExchangeResponse_class_data_ =
        TokenExchangeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TokenExchangeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TokenExchangeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TokenExchangeResponse_class_data_.tc_table);
  return TokenExchangeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 53, 2>
TokenExchangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TokenExchangeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::TokenExchangeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agent.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0,
      PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.header_)}},
    // string access_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.access_token_)}},
    // uint64 expires_in = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TokenExchangeResponse, _impl_.expires_in_), 2>(),
     {24, 2, 0,
      PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.expires_in_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.header_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string access_token = 2;
    {PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.access_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 expires_in = 3;
    {PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.expires_in_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::ResponseHeader>()},
  }},
  {{
    "\40\0\14\0\0\0\0\0"
    "agent_auth.TokenExchangeResponse"
    "access_token"
  }},
};
PROTOBUF_NOINLINE void TokenExchangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.TokenExchangeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.access_token_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_.expires_in_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TokenExchangeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TokenExchangeResponse& this_ = static_cast<const TokenExchangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TokenExchangeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TokenExchangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.TokenExchangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.ResponseHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // string access_token = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_access_token().empty()) {
      const ::std::string& _s = this_._internal_access_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_auth.TokenExchangeResponse.access_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // uint64 expires_in = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_expires_in() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_expires_in(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.TokenExchangeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TokenExchangeResponse::ByteSizeLong(const MessageLite& base) {
  const TokenExchangeResponse& this_ = static_cast<const TokenExchangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TokenExchangeResponse::ByteSizeLong() const {
  const TokenExchangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.TokenExchangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // string access_token = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_access_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_access_token());
      }
    }
    // .agent.ResponseHeader header = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // uint64 expires_in = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_expires_in() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_expires_in());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TokenExchangeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<TokenExchangeResponse*>(&to_msg);
  auto& from = static_cast<const TokenExchangeResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.TokenExchangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_access_token().empty()) {
        _this->_internal_set_access_token(from._internal_access_token());
      } else {
        if (_this->_impl_.access_token_.IsDefault()) {
          _this->_internal_set_access_token("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_expires_in() != 0) {
        _this->_impl_.expires_in_ = from._impl_.expires_in_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void TokenExchangeResponse::CopyFrom(const TokenExchangeResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.TokenExchangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TokenExchangeResponse::InternalSwap(TokenExchangeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_token_, &other->_impl_.access_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.expires_in_)
      + sizeof(TokenExchangeResponse::_impl_.expires_in_)
      - PROTOBUF_FIELD_OFFSET(TokenExchangeResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata TokenExchangeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AuthorizeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AuthorizeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_._has_bits_);
};

void AuthorizeRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000004U);
}
AuthorizeRequest::AuthorizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AuthorizeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.AuthorizeRequest)
}
PROTOBUF_NDEBUG_INLINE AuthorizeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::AuthorizeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        service_(arena, from.service_),
        uid_(arena, from.uid_) {}

AuthorizeRequest::AuthorizeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AuthorizeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AuthorizeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuthorizeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000004U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agent_auth.AuthorizeRequest)
}
PROTOBUF_NDEBUG_INLINE AuthorizeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        service_(arena),
        uid_(arena) {}

inline void AuthorizeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
AuthorizeRequest::~AuthorizeRequest() {
  // @@protoc_insertion_point(destructor:agent_auth.AuthorizeRequest)
  SharedDtor(*this);
}
inline void AuthorizeRequest::SharedDtor(MessageLite& self) {
  AuthorizeRequest& this_ = static_cast<AuthorizeRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.service_.Destroy();
  this_._impl_.uid_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AuthorizeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AuthorizeRequest(arena);
}
constexpr auto AuthorizeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuthorizeRequest),
                                            alignof(AuthorizeRequest));
}
constexpr auto AuthorizeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AuthorizeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AuthorizeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AuthorizeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AuthorizeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AuthorizeRequest>(), &AuthorizeRequest::ByteSizeLong,
              &AuthorizeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_._cached_size_),
          false,
      },
      &AuthorizeRequest::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AuthorizeRequest_class_data_ =
        AuthorizeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AuthorizeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AuthorizeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AuthorizeRequest_class_data_.tc_table);
  return AuthorizeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 46, 2>
AuthorizeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AuthorizeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::AuthorizeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agent.RequestHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0,
      PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_.header_)}},
    // string service = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_.service_)}},
    // string uid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0,
      PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.RequestHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_.header_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string service = 2;
    {PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_.service_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string uid = 3;
    {PROTOBUF_FIELD_OFFSET(AuthorizeRequest, _impl_.uid_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::RequestHeader>()},
  }},
  {{
    "\33\0\7\3\0\0\0\0"
    "agent_auth.AuthorizeRequest"
    "service"
    "uid"
  }},
};
PROTOBUF_NOINLINE void AuthorizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.AuthorizeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.service_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AuthorizeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AuthorizeRequest& this_ = static_cast<const AuthorizeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AuthorizeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AuthorizeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.AuthorizeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.RequestHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // string service = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_service().empty()) {
      const ::std::string& _s = this_._internal_service();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_auth.AuthorizeRequest.service");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string uid = 3;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_uid().empty()) {
      const ::std::string& _s = this_._internal_uid();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_auth.AuthorizeRequest.uid");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.AuthorizeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AuthorizeRequest::ByteSizeLong(const MessageLite& base) {
  const AuthorizeRequest& this_ = static_cast<const AuthorizeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AuthorizeRequest::ByteSizeLong() const {
  const AuthorizeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.AuthorizeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // string service = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_service().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_service());
      }
    }
    // string uid = 3;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_uid().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_uid());
      }
    }
    // .agent.RequestHeader header = 1;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AuthorizeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<AuthorizeRequest*>(&to_msg);
  auto& from = static_cast<const AuthorizeRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.AuthorizeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_service().empty()) {
        _this->_internal_set_service(from._internal_service());
      } else {
        if (_this->_impl_.service_.IsDefault()) {
          _this->_internal_set_service("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_uid().empty()) {
        _this->_internal_set_uid(from._internal_uid());
      } else {
        if (_this->_impl_.uid_.IsDefault()) {
          _this->_internal_set_uid("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void AuthorizeRequest::CopyFrom(const AuthorizeRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.AuthorizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthorizeRequest::InternalSwap(AuthorizeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_, &other->_impl_.service_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata AuthorizeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AuthorizeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AuthorizeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AuthorizeResponse, _impl_._has_bits_);
};

void AuthorizeResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  ClearHasBit(_impl_._has_bits_[0],
                  0x00000001U);
}
AuthorizeResponse::AuthorizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AuthorizeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_auth.AuthorizeResponse)
}
PROTOBUF_NDEBUG_INLINE AuthorizeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::agent_auth::AuthorizeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AuthorizeResponse::AuthorizeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AuthorizeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AuthorizeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuthorizeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (CheckHasBit(cached_has_bits, 0x00000001U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agent_auth.AuthorizeResponse)
}
PROTOBUF_NDEBUG_INLINE AuthorizeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AuthorizeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
AuthorizeResponse::~AuthorizeResponse() {
  // @@protoc_insertion_point(destructor:agent_auth.AuthorizeResponse)
  SharedDtor(*this);
}
inline void AuthorizeResponse::SharedDtor(MessageLite& self) {
  AuthorizeResponse& this_ = static_cast<AuthorizeResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AuthorizeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AuthorizeResponse(arena);
}
constexpr auto AuthorizeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AuthorizeResponse),
                                            alignof(AuthorizeResponse));
}
constexpr auto AuthorizeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AuthorizeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AuthorizeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AuthorizeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AuthorizeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AuthorizeResponse>(), &AuthorizeResponse::ByteSizeLong,
              &AuthorizeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AuthorizeResponse, _impl_._cached_size_),
          false,
      },
      &AuthorizeResponse::kDescriptorMethods,
      &descriptor_table_agent_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AuthorizeResponse_class_data_ =
        AuthorizeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AuthorizeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AuthorizeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AuthorizeResponse_class_data_.tc_table);
  return AuthorizeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
AuthorizeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuthorizeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AuthorizeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agent_auth::AuthorizeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agent.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(AuthorizeResponse, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(AuthorizeResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agent::ResponseHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AuthorizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_auth.AuthorizeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AuthorizeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AuthorizeResponse& this_ = static_cast<const AuthorizeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AuthorizeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AuthorizeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:agent_auth.AuthorizeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agent.ResponseHeader header = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_auth.AuthorizeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AuthorizeResponse::ByteSizeLong(const MessageLite& base) {
  const AuthorizeResponse& this_ = static_cast<const AuthorizeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AuthorizeResponse::ByteSizeLong() const {
  const AuthorizeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agent_auth.AuthorizeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .agent.ResponseHeader header = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AuthorizeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<AuthorizeResponse*>(&to_msg);
  auto& from = static_cast<const AuthorizeResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_auth.AuthorizeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void AuthorizeResponse::CopyFrom(const AuthorizeResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:agent_auth.AuthorizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthorizeResponse::InternalSwap(AuthorizeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata AuthorizeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace agent_auth
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_agent_5fauth_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
